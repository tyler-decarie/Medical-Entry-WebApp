{"version":3,"sources":["views/token.js","serviceWorker.js","helpers/chartjs.js","helpers/getInitials.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","common/validators.js","components/SearchInput/SearchInput.js","components/StatusBullet/StatusBullet.js","components/RouteWithLayout/RouteWithLayout.js","components/PrivateRoute/PrivateRoute.js","layouts/Main/components/Footer/Footer.js","layouts/Main/components/Sidebar/components/Profile/Profile.js","layouts/Main/components/Sidebar/components/SidebarNav/SidebarNav.js","layouts/Main/components/Sidebar/Sidebar.js","layouts/Main/components/Sidebar/components/UpgradePlan/UpgradePlan.js","layouts/Main/components/Topbar/Topbar.js","layouts/Main/Main.js","layouts/Minimal/components/Topbar/Topbar.js","layouts/Minimal/Minimal.js","views/Account/components/AccountDetails/ControlledAddressInput.js","views/Account/components/AccountDetails/AccountDetails.js","views/Account/components/AccountProfile/AccountProfile.js","views/Account/components/Password/Password.js","views/Account/Account.js","views/Dashboard/components/Budget/Budget.js","views/Dashboard/components/LatestOrders/LatestOrders.js","views/Dashboard/components/LatestOrders/data.js","views/Dashboard/components/LatestProducts/data.js","views/Dashboard/components/LatestProducts/LatestProducts.js","views/Dashboard/components/LatestSales/chart.js","views/Dashboard/components/LatestSales/LatestSales.js","views/Dashboard/components/TasksProgress/TasksProgress.js","views/Dashboard/components/TotalProfit/TotalProfit.js","views/Dashboard/components/TotalUsers/TotalUsers.js","views/Dashboard/components/UsersByDevice/UsersByDevice.js","views/Dashboard/Dashboard.js","views/Dashboard/components/Entry/Entry.js","views/NotFound/NotFound.js","views/Icons/Icons.js","views/ProductList/components/ProductCard/ProductCard.js","views/ProductList/components/ProductsToolbar/ProductsToolbar.js","views/ProductList/data.js","views/ProductList/ProductList.js","views/Settings/components/Notifications/Notifications.js","views/Settings/components/Password/Password.js","views/Settings/Settings.js","icons/Facebook/index.js","icons/Google/index.js","views/SignIn/SignIn.js","views/SignUp/SignUpMed.js","views/Typography/Typography.js","views/UserList/components/UsersTable/UsersTable.js","views/UserList/components/UsersToolbar/UsersToolbar.js","views/UserList/UserList.js","views/EntryList/components/EntryButton/EntryButton.js","components/SearchInputEntries/SearchInputEntries.js","views/EntryList/components/EntryToolbar/EntryToolbar.js","views/EntryList/components/PDFButton/PDFButton.js","views/EntryList/components/EntriesExport/EntriesExport.js","views/EntryList/components/EntriesTable/EntriesTable.js","views/EntryList/EntryList.js","views/SignUp/EmailSent.js","views/SignUp/SelectSignUp.js","views/SignUp/SignUp.js","views/SignIn/Forgot.js","views/SignIn/Reset.js","views/SignUp/Verified.js","views/MedProList/components/UsersTable/UsersTable.js","components/SearchInputPatients/SearchInputPatients.js","views/MedProList/components/UsersToolbar/UsersToolbar.js","views/MedProList/UserList.js","Routes.js","App.js","index.js"],"names":["getToken","localStorage","getItem","tokenDetails","token","payload","window","atob","split","JSON","parse","error","console","module","exports","authenticate","details","log","exp","Math","round","Date","_id","removeToken","removeItem","saveToken","setItem","Boolean","location","hostname","match","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","height","width","barSize","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","name","replace","slice","map","v","toUpperCase","join","white","black","primary","contrastText","dark","colors","teal","main","light","secondary","cyan","success","green","info","blue","warning","orange","red","text","blueGrey","link","background","default","paper","icon","divider","grey","h1","color","palette","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","MuiButton","contained","boxShadow","MuiIconButton","root","MuiPaper","elevation1","MuiTableCell","typography","MuiTableHead","MuiTypography","gutterBottom","marginBottom","theme","createMuiTheme","overrides","zIndex","appBar","drawer","checked","value","message","useStyles","makeStyles","borderRadius","alignItems","padding","spacing","display","flexBasis","marginRight","input","flexGrow","SearchInput","props","className","style","onChange","rest","classes","history","useHistory","Paper","clsx","Input","disableUnderline","onKeyUp","event","key","searchUsers","target","a","axios","post","firstname","then","response","data","push","pathname","catch","err","flexShrink","sm","md","lg","neutral","danger","StatusBullet","size","defaultProps","RouteWithLayout","Layout","layout","Component","component","render","matchProps","PrivateRoute","id","verified","isAuthenticated","isVerified","verify","to","React","Footer","variant","Link","href","flexDirection","minHeight","avatar","marginTop","Profile","useState","bio","user","setUser","useEffect","get","personalInfo","lastname","username","Avatar","alt","RouterLink","src","item","paddingTop","paddingBottom","justifyContent","fontWeightMedium","active","CustomRouterLink","forwardRef","ref","SidebarNav","pages","List","page","ListItem","disableGutters","title","Button","activeClassName","media","textAlign","content","actions","breakpoints","up","margin","nav","Sidebar","open","onClose","Drawer","anchor","Divider","signOutButton","marginLeft","Topbar","onSidebarOpen","notifications","AppBar","Toolbar","Hidden","mdDown","IconButton","Badge","badgeContent","length","onClick","lgUp","shiftContent","paddingLeft","Main","children","useTheme","isDesktop","useMediaQuery","defaultMatches","openSidebar","setOpenSidebar","shouldOpenSidebar","position","Minimal","ControlledAddressInput","handleAddAddress","address","setState","addresses","state","handleChangeAddress","addressIndex","street","city","province","postalCode","country","getAddress","onAdd","allAddresses","Alert","elevation","AccountDetails","setOpen","firstName","lastName","email","phoneNum","postalcode","phoneNumber","emg_email","birthday","gender","height_num","height_unit","weight_num","weight_unit","alg_name","alg_type","alg_severity","disab_name","disab_type","disab_definition","med_name","dosage","fillCount","prescribedBy","prescribedDate","renewDate","bloodType","values","setValues","handleChange","emergencyContact","patientStats","weight","allergies","disabilities","medications","handleClose","reason","handleUpdate","preventDefault","status","Card","autoComplete","noValidate","CardHeader","subheader","CardContent","Grid","container","xs","TextField","fullWidth","helperText","label","required","type","addressLine1","region","zip","select","MenuItem","utils","DateFnsUtils","DatePicker","disableFuture","openTo","format","views","val","handleChangeDate1","multiline","handleChangeDate2","handleChangeDate3","CardActions","Snackbar","autoHideDuration","severity","progress","uploadButton","AccountProfile","count","setCount","timezone","locationText","dateText","moment","LinearProgress","Password","password","confirm","valid","handleReset","alert","disabled","Account","xl","difference","differenceIcon","differenceValue","Budget","justify","uuid","inner","minWidth","statusContainer","statusColors","delivered","pending","refunded","LatestOrders","entries","action","Table","TableHead","TableRow","TableCell","sortDirection","Tooltip","enterDelay","TableSortLabel","direction","TableBody","order","hover","customer","createdAt","subtract","image","labels","datasets","responsive","maintainAspectRatio","animation","legend","tooltips","enabled","mode","intersect","titleFontColor","bodyFontColor","footerFontColor","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","chartContainer","LatestSales","TasksProgress","TotalUsers","stats","device","deviceIcon","UsersByDevice","hoverBorderColor","cutoutPercentage","devices","Dashboard","iframe","border","maxWidth","NotFound","imageContainer","overflow","statsItem","statsIcon","row","spacer","importButton","exportButton","searchInput","pagination","Facebook","SvgIcon","d","Google","schema","presence","allowEmpty","maximum","grid","quoteContainer","down","quote","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","quoteInner","quoteText","contentContainer","contentHeader","paddingBototm","paddingRight","logoImage","contentBody","form","socialButtons","socialIcon","sugestion","textField","signInButton","withRouter","isValid","touched","errors","formState","setFormState","validate","persist","hasError","field","person","goBack","onSubmit","auth","withCredentials","align","userName","pattern","licenseid","policy","policyCheckbox","signUpButton","Checkbox","policyText","underline","FormHelperText","nameContainer","UsersTable","users","selectedUsers","setSelectedUsers","rowsPerPage","setRowsPerPage","setPage","indeterminate","tableRow","selected","selectedIndex","newSelectedUsers","concat","handleSelectOne","avatarUrl","getInitials","TablePagination","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","UsersToolbar","placeholder","UserList","setUsers","undefined","forEach","userData","fillUsers","dialogPaper","maxHeight","notchedOutline","borderBottomStyle","borderBottomColor","EntryButton","category","setCategory","selectedCategory","setSelectedCategory","responseText","radioValue","rows","setRows","date","time","questionData","fillCategories","handleClickOpen","option","firstLetter","categoryName","test","submit","contents","toISOString","substring","Dialog","aria-labelledby","scroll","DialogTitle","DialogContent","DialogContentText","autoFocus","disableToolbar","KeyboardButtonProps","Autocomplete","sort","b","localeCompare","groupBy","getOptionLabel","getOptionSelected","onInputChange","innerText","filter","question","includes","prevArray","categoryQuestions","questions","renderInput","params","index2","index1","newData","setResponse","InputProps","listRows","splice","removeRow","DialogActions","SearchInputEntries","searchEntries","patient","EntryToolbar","PDFButton","document","getElementById","html2canvas","canvas","body","appendChild","imgData","toDataURL","pdf","jsPDF","addImage","save","inline","list","card","pos","indent","EntriesExport","selectedEntries","results","setResults","exportData","categoryQuestion","result","Fragment","answer","substr","dateOfEntry","timeOfEntry","setselectedEntries","handleRemove","reload","entry","newselectedEntries","aria-label","EntryList","setEntries","entryData","fillEntries","comfText","choice","setChoice","InputLabel","Select","labelId","select_signup","handleClick","handleSignIn","password2","equality","tokenValidated","openPerms","SearchInputPatients","Routes","exact","from","DashboardView","MainLayout","path","EntryView","UserListView","AccountView","SelectSignUp","MinimalLayout","SignUp","SignUpMed","SignInView","Verified","NotFoundView","EmailSent","Forgot","Reset","MedProList","browserHistory","createBrowserHistory","Chart","helpers","extend","elements","Rectangle","prototype","chartjs","validators","App","ThemeProvider","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9394e04a.chunk.js","sourcesContent":["function getToken() {\r\n    return localStorage.getItem(\"auth_token\");\r\n}\r\n\r\nfunction saveToken(token) {\r\n    return localStorage.setItem(\"auth_token\", token);\r\n}\r\n\r\nfunction removeToken() {\r\n    return localStorage.removeItem(\"auth_token\");\r\n}\r\n\r\nfunction tokenDetails() {\r\n    try {\r\n        const token = getToken();\r\n\r\n        if (token) {\r\n            const payload = window.atob(token.split(\".\")[1]);\r\n            return JSON.parse(payload);\r\n        } else {\r\n            return false;\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n        return false;\r\n    }\r\n};\r\n\r\nfunction authenticate() {\r\n    const details = tokenDetails();\r\n    console.log(`details`);\r\n    console.log(details);\r\n    if (details && (details.exp > Math.round(new Date() / 1000))) {\r\n        console.log('auth pass');\r\n        return details._id;\r\n    } else {\r\n        console.log('auth fail')\r\n        return false;\r\n    }\r\n};\r\n\r\nmodule.exports = { getToken, authenticate, removeToken, saveToken, tokenDetails };","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft =\r\n      left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight =\r\n      right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom =\r\n      bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nexport default {\r\n  draw\r\n};\r\n","export default (name = '') =>\r\n  name\r\n    .replace(/\\s+/, ' ')\r\n    .split(' ')\r\n    .slice(0, 2)\r\n    .map(v => v && v[0].toUpperCase())\r\n    .join('');\r\n","import { colors } from '@material-ui/core';\r\n\r\nconst white = '#FFFFFF';\r\nconst black = '#000000';\r\n\r\nexport default {\r\n  black,\r\n  white,\r\n  primary: {\r\n    contrastText: white,\r\n    dark: colors.teal[900],\r\n    main: colors.teal[500],\r\n    light: colors.teal[100]\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    dark: colors.cyan[900],\r\n    main: colors.cyan['A400'],\r\n    light: colors.cyan['A400']\r\n  },\r\n  success: {\r\n    contrastText: white,\r\n    dark: colors.green[900],\r\n    main: colors.green[600],\r\n    light: colors.green[400]\r\n  },\r\n  info: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue[600],\r\n    light: colors.blue[400]\r\n  },\r\n  warning: {\r\n    contrastText: white,\r\n    dark: colors.orange[900],\r\n    main: colors.orange[600],\r\n    light: colors.orange[400]\r\n  },\r\n  error: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[600],\r\n    light: colors.red[400]\r\n  },\r\n  text: {\r\n    primary: colors.blueGrey[900],\r\n    secondary: colors.blueGrey[600],\r\n    link: colors.cyan[600]\r\n  },\r\n  background: {\r\n    default: '#F4F6F8',\r\n    paper: white\r\n  },\r\n  icon: colors.blueGrey[600],\r\n  divider: colors.grey[200]\r\n};\r\n","import palette from './palette';\r\n\r\nexport default {\r\n  h1: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '35px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '40px'\r\n  },\r\n  h2: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '29px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '32px'\r\n  },\r\n  h3: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '24px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '28px'\r\n  },\r\n  h4: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '20px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '24px'\r\n  },\r\n  h5: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  h6: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  subtitle1: {\r\n    color: palette.text.primary,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '25px'\r\n  },\r\n  subtitle2: {\r\n    color: palette.text.secondary,\r\n    fontWeight: 400,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body1: {\r\n    color: palette.text.primary,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body2: {\r\n    color: palette.text.secondary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.04px',\r\n    lineHeight: '18px'\r\n  },\r\n  button: {\r\n    color: palette.text.primary,\r\n    fontSize: '14px'\r\n  },\r\n  caption: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px'\r\n  },\r\n  overline: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    fontWeight: 500,\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px',\r\n    textTransform: 'uppercase'\r\n  }\r\n};\r\n","import MuiButton from './MuiButton';\r\nimport MuiIconButton from './MuiIconButton';\r\nimport MuiPaper from './MuiPaper';\r\nimport MuiTableCell from './MuiTableCell';\r\nimport MuiTableHead from './MuiTableHead';\r\nimport MuiTypography from './MuiTypography';\r\n\r\nexport default {\r\n  MuiButton,\r\n  MuiIconButton,\r\n  MuiPaper,\r\n  MuiTableCell,\r\n  MuiTableHead,\r\n  MuiTypography\r\n};\r\n","export default {\r\n  contained: {\r\n    boxShadow:\r\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\r\n    backgroundColor: '#FFFFFF'\r\n  }\r\n};\r\n","import palette from '../palette';\r\n\r\nexport default {\r\n  root: {\r\n    color: palette.icon,\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\r\n    }\r\n  }\r\n};\r\n","export default {\r\n  elevation1: {\r\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\r\n  }\r\n};\r\n","import palette from '../palette';\r\nimport typography from '../typography';\r\n\r\nexport default {\r\n  root: {\r\n    ...typography.body1,\r\n    borderBottom: `1px solid ${palette.divider}`\r\n  }\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  }\r\n};\r\n","export default {\r\n  gutterBottom: {\r\n    marginBottom: 8\r\n  }\r\n};\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from './overrides';\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  overrides,\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","const checked = (value, options) => {\r\n  if (value !== true) {\r\n    return options.message || 'must be checked';\r\n  }\r\n};\r\n\r\nexport default {\r\n  checked\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Paper, Input } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    borderRadius: '4px',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1),\r\n    display: 'flex',\r\n    flexBasis: 420\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  input: {\r\n    flexGrow: 1,\r\n    fontSize: '14px',\r\n    lineHeight: '16px',\r\n    letterSpacing: '-0.05px'\r\n  }\r\n}));\r\n\r\nconst SearchInput = props => {\r\n  const { className, onChange, style, ...rest } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const handleKeyDown = (event) => {\r\n    if(event.key === 'Enter') {\r\n      //console.log(event.target.value);\r\n      const name = event.target.value;\r\n      searchUsers(name);\r\n    }\r\n  \r\n  async function searchUsers(name) {\r\n    await axios.post(\"http://localhost:3000/users/searchpatients\", {\r\n      firstname: name\r\n    }).then((response) => {\r\n        const data = response.data;\r\n        console.log(data[0]);\r\n        history.push({pathname:'/patients', data:data});\r\n    }).catch((err) => {\r\n        console.log(err);\r\n    })\r\n}\r\n};\r\n\r\n  return (\r\n    <Paper\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      style={style}\r\n    >\r\n      <SearchIcon className={classes.icon} />\r\n      <Input\r\n        {...rest}\r\n        className={classes.input}\r\n        disableUnderline\r\n        onKeyUp={handleKeyDown}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nSearchInput.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object,\r\n  history: PropTypes.object,\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'inline-block',\r\n    borderRadius: '50%',\r\n    flexGrow: 0,\r\n    flexShrink: 0\r\n  },\r\n  sm: {\r\n    height: theme.spacing(1),\r\n    width: theme.spacing(1)\r\n  },\r\n  md: {\r\n    height: theme.spacing(2),\r\n    width: theme.spacing(2)\r\n  },\r\n  lg: {\r\n    height: theme.spacing(3),\r\n    width: theme.spacing(3)\r\n  },\r\n  neutral: {\r\n    backgroundColor: theme.palette.neutral\r\n  },\r\n  primary: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.info.main\r\n  },\r\n  warning: {\r\n    backgroundColor: theme.palette.warning.main\r\n  },\r\n  danger: {\r\n    backgroundColor: theme.palette.error.main\r\n  },\r\n  success: {\r\n    backgroundColor: theme.palette.success.main\r\n  }\r\n}));\r\n\r\nconst StatusBullet = props => {\r\n  const { className, size, color, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <span\r\n      {...rest}\r\n      className={clsx(\r\n        {\r\n          [classes.root]: true,\r\n          [classes[size]]: size,\r\n          [classes[color]]: color\r\n        },\r\n        className\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nStatusBullet.propTypes = {\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    'neutral',\r\n    'primary',\r\n    'info',\r\n    'success',\r\n    'warning',\r\n    'danger'\r\n  ]),\r\n  size: PropTypes.oneOf(['sm', 'md', 'lg'])\r\n};\r\n\r\nStatusBullet.defaultProps = {\r\n  size: 'md',\r\n  color: 'default'\r\n};\r\n\r\nexport default StatusBullet;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { authenthicate } from '../../views/token';\r\nimport axios from 'axios';\r\n\r\nconst RouteWithLayout = props => {\r\n  const { layout: Layout, component: Component, ...rest } = props;\r\n  console.log(props);\r\n  return (\r\n\r\n    <Route\r\n      {...rest}\r\n      render={matchProps => (\r\n        <Layout>\r\n          <Component {...matchProps} />\r\n        </Layout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nRouteWithLayout.propTypes = {\r\n  component: PropTypes.any.isRequired,\r\n  layout: PropTypes.any.isRequired,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default RouteWithLayout;\r\n","import React from \"react\";\r\nimport { browserHistory } from 'react-router';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { authenticate } from \"../../views/token\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n\r\nclass PrivateRoute extends React.Component {\r\n\r\n    verify(id) {\r\n        var verified = axios.post(\"http://localhost:3000/login/verify\", {\r\n            id: id\r\n        }).then(response => {\r\n            verified = true;\r\n            return verified\r\n        });\r\n        return verified\r\n\r\n    }\r\n\r\n    render() {\r\n        const { layout: Layout, component: Component, ...rest } = this.props;\r\n        console.log(this.props);\r\n        const isAuthenticated = authenticate();\r\n        var isVerified = false;\r\n        if (isAuthenticated) {\r\n            isVerified = this.verify(isAuthenticated);\r\n        }\r\n        return isVerified ? (\r\n            <Route\r\n                {...rest}\r\n                render={matchProps => (\r\n                    <Layout>\r\n                        <Component {...matchProps} />\r\n                    </Layout>\r\n                )}\r\n            />\r\n        ) : (\r\n                <Redirect to={{ pathname: '/sign-in' }} />\r\n            );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Link } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Footer = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography variant=\"body1\">\r\n        &copy;{' '}\r\n        <Link\r\n          component=\"a\"\r\n          href=\"https://www.3elmconsulting.com/\"\r\n          target=\"_blank\"\r\n        >\r\n          3ELM Consulting\r\n        </Link>\r\n        . 2020\r\n      </Typography>\r\n      <Typography variant=\"caption\">\r\n        Placing your health back in your hands\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, Typography } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { authenticate } from '../../../../../../views/token';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    minHeight: 'fit-content'\r\n  },\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Profile = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const id = authenticate();\r\n\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    bio: '',\r\n    avatar: '/images/avatars/avatar_11.png'\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n  axios.get(`http://localhost:3000/users/loadUser/${id}`)\r\n    .then(response => {\r\n      const data = response.data;\r\n      setUser({\r\n        ...user,\r\n          name: data.personalInfo.firstname + ' ' + data.personalInfo.lastname,\r\n          bio: data.username,\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  },[]);\r\n\r\n\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Avatar\r\n        alt=\"Person\"\r\n        className={classes.avatar}\r\n        component={RouterLink}\r\n        src={user.avatar}\r\n        to=\"/settings\"\r\n      />\r\n      <Typography\r\n        className={classes.name}\r\n        variant=\"h4\"\r\n      >\r\n        {user.name}\r\n      </Typography>\r\n      <Typography variant=\"body2\">{user.bio}</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n","/* eslint-disable react/no-multi-comp */\r\n/* eslint-disable react/display-name */\r\nimport React, { forwardRef } from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { List, ListItem, Button, colors } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: colors.blueGrey[800],\r\n    padding: '10px 8px',\r\n    justifyContent: 'flex-start',\r\n    textTransform: 'none',\r\n    letterSpacing: 0,\r\n    width: '100%',\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  icon: {\r\n    color: theme.palette.icon,\r\n    width: 24,\r\n    height: 24,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}));\r\n\r\nconst CustomRouterLink = forwardRef((props, ref) => (\r\n  <div\r\n    ref={ref}\r\n    style={{ flexGrow: 1 }}\r\n  >\r\n    <RouterLink {...props} />\r\n  </div>\r\n));\r\n\r\nconst SidebarNav = props => {\r\n  const { pages, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {pages.map(page => (\r\n        <ListItem\r\n          className={classes.item}\r\n          disableGutters\r\n          key={page.title}\r\n        >\r\n          <Button\r\n            activeClassName={classes.active}\r\n            className={classes.button}\r\n            component={CustomRouterLink}\r\n            to={page.href}\r\n          >\r\n            <div className={classes.icon}>{page.icon}</div>\r\n            {page.title}\r\n          </Button>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nSidebarNav.propTypes = {\r\n  className: PropTypes.string,\r\n  pages: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SidebarNav;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Divider, Drawer } from '@material-ui/core';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport NoteIcon from '@material-ui/icons/Note';\r\n\r\nimport { Profile, SidebarNav, UpgradePlan } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawer: {\r\n    width: 240,\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginTop: 64,\r\n      height: 'calc(100% - 64px)'\r\n    }\r\n  },\r\n  root: {\r\n    backgroundColor: theme.palette.white,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    padding: theme.spacing(2)\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  nav: {\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Sidebar = props => {\r\n  const { open, variant, onClose, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const pages = [\r\n    {\r\n      title: 'Dashboard',\r\n      href: '/dashboard',\r\n      icon: <DashboardIcon />\r\n    },\r\n    {\r\n      title: 'Entry',\r\n      href: '/entry',\r\n      icon: <NoteIcon />\r\n    },\r\n    {\r\n      title: 'Patients',\r\n      href: '/patients',\r\n      icon: <PeopleIcon />\r\n    },\r\n    {\r\n      title: 'Medical Providers',\r\n      href: '/medpros',\r\n      icon: <LocalHospitalIcon />\r\n    },\r\n    // {\r\n    //   title: 'Products',\r\n    //   href: '/products',\r\n    //   icon: <ShoppingBasketIcon />\r\n    // },\r\n    // {\r\n    //   title: 'Authentication',\r\n    //   href: '/sign-in',\r\n    //   icon: <LockOpenIcon />\r\n    // },\r\n    // {\r\n    //   title: 'Typography',\r\n    //   href: '/typography',\r\n    //   icon: <TextFieldsIcon />\r\n    // },\r\n    // {\r\n    //   title: 'Icons',\r\n    //   href: '/icons',\r\n    //   icon: <ImageIcon />\r\n    // },\r\n    {\r\n      title: 'Account',\r\n      href: '/account',\r\n      icon: <AccountBoxIcon />\r\n    },\r\n    // {\r\n    //   title: 'Settings',\r\n    //   href: '/settings',\r\n    //   icon: <SettingsIcon />\r\n    // }\r\n  ];\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      classes={{ paper: classes.drawer }}\r\n      onClose={onClose}\r\n      open={open}\r\n      variant={variant}\r\n    >\r\n      <div\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n      >\r\n        <Profile />\r\n        <Divider className={classes.divider} />\r\n        <SidebarNav\r\n          className={classes.nav}\r\n          pages={pages}\r\n        />\r\n      </div>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nSidebar.propTypes = {\r\n  className: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired,\r\n  variant: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Button, colors } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  },\r\n  media: {\r\n    paddingTop: theme.spacing(2),\r\n    height: 80,\r\n    textAlign: 'center',\r\n    '& > img': {\r\n      height: '100%',\r\n      width: 'auto'\r\n    }\r\n  },\r\n  content: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1, 2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  }\r\n}));\r\n\r\nconst UpgradePlan = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <div className={classes.media}>\r\n        <img\r\n          alt=\"Upgrade to PRO\"\r\n          src=\"/images/undraw_resume_folder_2_arse.svg\"\r\n        />\r\n      </div>\r\n      <div className={classes.content}>\r\n        <Typography\r\n          align=\"center\"\r\n          gutterBottom\r\n          variant=\"h6\"\r\n        >\r\n          Upgrade to PRO\r\n        </Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          variant=\"body2\"\r\n        >\r\n          Upgrade to Devias Kit PRO and get even more components\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <Button\r\n          color=\"primary\"\r\n          component=\"a\"\r\n          href=\"https://devias.io/products/devias-kit-pro\"\r\n          variant=\"contained\"\r\n        >\r\n          Upgrade\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUpgradePlan.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UpgradePlan;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { AppBar, Toolbar, Badge, Hidden, IconButton } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport { removeToken } from '../../../../views/token'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    boxShadow: 'none'\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1\r\n  },\r\n  signOutButton: {\r\n    marginLeft: theme.spacing(1),\r\n    color: 'white'\r\n  }\r\n}));\r\n\r\nconst Topbar = props => {\r\n  const { className, onSidebarOpen, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [notifications] = useState([]);\r\n\r\n  return (\r\n    <AppBar\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Toolbar>\r\n        <RouterLink to=\"/dashboard\">\r\n          <img\r\n            alt=\"Logo\"\r\n            src=\"/images/logos/logo.png\"\r\n          />\r\n        </RouterLink>\r\n        <div className={classes.flexGrow} />\r\n        <Hidden mdDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n\r\n          <RouterLink\r\n           to=\"/\">\r\n          <IconButton\r\n            className={classes.signOutButton}\r\n            onClick={removeToken}\r\n          >\r\n            <InputIcon\r\n             />\r\n          </IconButton>\r\n          </RouterLink>\r\n  \r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={onSidebarOpen}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopbar.propTypes = {\r\n  className: PropTypes.string,\r\n  onSidebarOpen: PropTypes.func\r\n};\r\n\r\nexport default Topbar;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport { useMediaQuery } from '@material-ui/core';\r\n\r\nimport { Sidebar, Topbar, Footer } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingTop: 56,\r\n    height: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingTop: 64\r\n    }\r\n  },\r\n  shiftContent: {\r\n    paddingLeft: 240\r\n  },\r\n  content: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst Main = props => {\r\n  const { children } = props;\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\r\n    defaultMatches: true\r\n  });\r\n\r\n  const [openSidebar, setOpenSidebar] = useState(false);\r\n\r\n  const handleSidebarOpen = () => {\r\n    setOpenSidebar(true);\r\n  };\r\n\r\n  const handleSidebarClose = () => {\r\n    setOpenSidebar(false);\r\n  };\r\n\r\n  const shouldOpenSidebar = isDesktop ? true : openSidebar;\r\n\r\n  return (\r\n    <div\r\n      className={clsx({\r\n        [classes.root]: true,\r\n        [classes.shiftContent]: isDesktop\r\n      })}\r\n    >\r\n      <Topbar onSidebarOpen={handleSidebarOpen} />\r\n      <Sidebar\r\n        onClose={handleSidebarClose}\r\n        open={shouldOpenSidebar}\r\n        variant={isDesktop ? 'persistent' : 'temporary'}\r\n      />\r\n      <main className={classes.content}>\r\n        {children}\r\n        <Footer />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nMain.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    boxShadow: 'none'\r\n  }\r\n}));\r\n\r\nconst Topbar = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      color=\"primary\"\r\n      position=\"fixed\"\r\n    >\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <img\r\n            alt=\"Logo\"\r\n            src=\"/images/logos/logo--white.svg\"\r\n          />\r\n        </RouterLink>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Topbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport { Topbar } from './components';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingTop: 64,\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst Minimal = props => {\r\n  const { children } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Topbar />\r\n      <main className={classes.content}>{children}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nMinimal.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Minimal;\r\n","import React, {Component,useState, useEffect} from 'react'\r\nimport AddressInput from 'material-ui-address-input'\r\nimport { authenticate } from '../../../token';\r\nimport axios from 'axios';\r\n\r\nclass ControlledAddressInput extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            address:'',\r\n            addresses: []\r\n        }\r\n    }\r\n\r\n    getAddress(){\r\n        const id = authenticate();\r\n        axios.get(`http://localhost:3000/users/loadUser/${id}`)\r\n        .then(response => {\r\n            const data = response.data;\r\n            console.log(data.personalInfo.address);\r\n            if(data.personalInfo.address){\r\n                const address = {\r\n                            \"addressLine1\": data.personalInfo.address.street,\r\n                            \"city\": data.personalInfo.address.city,\r\n                            \"region\": data.personalInfo.address.province,\r\n                            \"zip\": data.personalInfo.address.postalCode,\r\n                            \"country\": data.personalInfo.address.country\r\n                        };\r\n                this.handleAddAddress(address);\r\n            }\r\n            \r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        debugger;\r\n        this.getAddress();\r\n    }\r\n\r\n    handleAddAddress = address => {\r\n        this.setState({\r\n            addresses: [...this.state.addresses, address]\r\n        })\r\n        if (this.props.onChange) {\r\n            this.props.onChange(address);\r\n        }\r\n    }\r\n \r\n    handleChangeAddress = addressIndex => {\r\n        this.setState({\r\n            address: addressIndex\r\n        })\r\n       \r\n    }\r\n \r\n    render () {\r\n        return (\r\n            <AddressInput\r\n                onAdd={this.handleAddAddress}\r\n                onChange={this.handleChangeAddress}\r\n                value={this.state.address}\r\n                allAddresses={this.state.addresses}\r\n            />\r\n        )\r\n    }\r\n}\r\n \r\nexport default ControlledAddressInput","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { authenticate } from '../../../token';\r\nimport axios from 'axios';\r\nimport ControlledAddressInput from './ControlledAddressInput';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {\r\n  DatePicker,\r\n  TimePicker,\r\n  DateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst AccountDetails = props => {\r\n  const { className, ...rest } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useStyles();\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const [values, setValues] = useState({\r\n    username: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phoneNum: '',\r\n    street: '',\r\n    city: '',\r\n    province: '',\r\n    postalcode: '',\r\n    country: '',\r\n    name: '',\r\n    phoneNumber: '',\r\n    emg_email: '',\r\n    birthday: '',\r\n    gender: '',\r\n    height_num: '',\r\n    height_unit: '',\r\n    weight_num: '',\r\n    weight_unit: '',\r\n    alg_name: '',\r\n    alg_type: '',\r\n    alg_severity: '',\r\n    disab_name: '',\r\n    disab_type: '',\r\n    disab_definition: '',\r\n    med_name: '',\r\n    dosage: '',\r\n    fillCount: '',\r\n    prescribedBy: '',\r\n    prescribedDate: '',\r\n    renewDate: '',\r\n    bloodType: '',\r\n  });\r\n\r\n  const handleChange = event => {\r\n\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const eventhandler = data => {\r\n    setValues({\r\n      ...values,\r\n        street: data.addressLine1,\r\n        city: data.city,\r\n        province: data.region,\r\n        postalcode: data.zip,\r\n        country: data.country,\r\n    });\r\n  }\r\n\r\n  const id = authenticate();\r\n\r\n  useEffect(async() => {\r\n     await axios.get(`http://localhost:3000/users/loadUser/${id}`)\r\n    .then(response => {\r\n      const data = response.data;\r\n      console.log(data);\r\n      setValues({\r\n        ...values,\r\n        username: data.username,\r\n        firstName: data.personalInfo.firstname,\r\n        lastName: data.personalInfo.lastname,\r\n        email: data.email,\r\n        phoneNum: data.personalInfo.phoneNum,\r\n        street: data.personalInfo.address.street,\r\n        city: data.personalInfo.address.city,\r\n        province: data.personalInfo.address.province,\r\n        postalcode: data.personalInfo.address.postalCode,\r\n        country: data.personalInfo.address.country,\r\n        name: data.personalInfo.emergencyContact.name,\r\n        phoneNumber: data.personalInfo.emergencyContact.phoneNumber,\r\n        emg_email: data.personalInfo.emergencyContact.emg_email,\r\n        birthday: data.patientStats.birthday,\r\n        gender:  data.patientStats.gender,\r\n        height_num:  data.patientStats.height.height_num,\r\n        height_unit:  data.patientStats.height.height_unit,\r\n        weight_num:  data.patientStats.weight.weight_num,\r\n        weight_unit:  data.patientStats.weight.weight_unit,\r\n        alg_name:  data.patientStats.allergies.alg_name,\r\n        alg_type: data.patientStats.allergies.alg_type,\r\n        alg_severity: data.patientStats.allergies.alg_severity,\r\n        disab_name: data.patientStats.disabilities.disab_name,\r\n        disab_type: data.patientStats.disabilities.disab_type,\r\n        disab_definition: data.patientStats.disabilities.disab_definition,\r\n        med_name: data.patientStats.medications.med_name,\r\n        dosage: data.patientStats.medications.dosage,\r\n        fillCount: data.patientStats.medications.fillCount,\r\n        prescribedBy: data.patientStats.medications.prescribedBy,\r\n        prescribedDate: data.patientStats.medications.prescribedDate,\r\n        renewDate: data.patientStats.medications.renewDate,\r\n        bloodType: data.patientStats.bloodType,\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  },[]);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function handleChangeDate1(val){\r\n    setValues({\r\n      ...values,\r\n        birthday: val,\r\n    });\r\n  }\r\n\r\n  function handleChangeDate2(val){\r\n    setValues({\r\n      ...values,\r\n      prescribedDate: val,\r\n    });\r\n  }\r\n\r\n  function handleChangeDate3(val){\r\n    setValues({\r\n      ...values,\r\n      renewDate: val,\r\n    });\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  console.log(values.address);\r\n\r\n  const handleUpdate = async event => {\r\n    const id = authenticate();\r\n    event.preventDefault();\r\n    await axios.post(`http://localhost:3000/users/update`, {\r\n        id: id,\r\n        username: values.username,\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        email: values.email,\r\n        phoneNum: values.phoneNum,\r\n        street: values.street,\r\n        city: values.city,\r\n        province: values.province,\r\n        postalcode: values.postalcode,\r\n        country: values.country,\r\n        name: values.name,\r\n        phoneNumber: values.phoneNumber,\r\n        emg_email: values.emg_email,\r\n        birthday: values.birthday,\r\n        gender: values.gender,\r\n        height_num: values.height_num,\r\n        height_unit: values.height_unit,\r\n        weight_num: values.weight_num,\r\n        weight_unit: values.weight_unit,\r\n        alg_name: values.alg_name,\r\n        alg_type: values.alg_type,\r\n        alg_severity: values.alg_severity,\r\n        disab_name: values.disab_name,\r\n        disab_type: values.disab_type,\r\n        disab_definition: values.disab_definition,\r\n        med_name: values.med_name,\r\n        dosage: values.dosage,\r\n        fillCount: values.fillCount,\r\n        prescribedBy: values.prescribedBy,\r\n        prescribedDate: values.prescribedDate,\r\n        renewDate: values.renewDate,\r\n        bloodType: values.bloodType,\r\n\t\t\t})\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tif (response.status === 200) {\r\n            \r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n          \r\n        });\r\n        handleClick();\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify your username\"\r\n                label=\"Username\"\r\n                margin=\"dense\"\r\n                name=\"username\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.username}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                margin=\"dense\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                margin=\"dense\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                margin=\"dense\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                margin=\"dense\"\r\n                name=\"phoneNum\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phoneNum}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <ControlledAddressInput\r\n                name=\"address\"\r\n                onChange={eventhandler}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n\r\n {/* Patient medical information */}\r\n        <CardHeader\r\n          subheader=\"Patients Medical information/History.\"\r\n          title=\"Patient Information\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField \r\n                fullWidth\r\n                id=\"select\" \r\n                label=\"Gender\"\r\n                onChange={handleChange} \r\n                value={values.gender}\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                // helperText=\"Select of for unspecified gender\"\r\n                name=\"gender\"\r\n                select>\r\n                <MenuItem value=\"male\">Male</MenuItem>\r\n                <MenuItem value=\"female\">Female</MenuItem>\r\n                <MenuItem value=\"other\">Other</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <DatePicker\r\n                  disableFuture\r\n                  id=\"date\"\r\n                  name=\"birthday\"\r\n                  openTo=\"year\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  label=\"Date of birth\"\r\n                  views={[\"year\", \"month\", \"date\"]}\r\n                  value={values.birthday}\r\n                  onChange={val => {\r\n                    handleChangeDate1(val);\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n\r\n                label=\"Height\"\r\n                margin=\"dense\"\r\n                name=\"height_num\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.height_num}\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField \r\n                id=\"select\" \r\n                onChange={handleChange} \r\n                value={values.height_unit}\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                name=\"height_unit\"\r\n                select>\r\n                <MenuItem value=\"ft\">ft</MenuItem>\r\n                <MenuItem value=\"cm\">cm</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n\r\n                label=\"Weight\"\r\n                margin=\"dense\"\r\n                name=\"weight_num\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.weight_num}\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField \r\n                id=\"select\" \r\n                onChange={handleChange} \r\n                value={values.weight_unit}\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                name=\"weight_unit\"\r\n                select>\r\n                <MenuItem value=\"kg\">kg</MenuItem>\r\n                <MenuItem value=\"lbs\">lbs</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n    \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n            <Divider />\r\n             <CardHeader\r\n                subheader=\"Disabilities\"\r\n                \r\n              />\r\n              <Divider />\r\n              <TextField\r\n                \r\n                label=\"Disability Name\"\r\n                margin=\"dense\"\r\n                name=\"disab_name\"\r\n                onChange={handleChange}\r\n                value={values.disab_name}\r\n                variant=\"outlined\"\r\n              />\r\n               &nbsp;\r\n               &nbsp;\r\n              <TextField\r\n                \r\n                label=\"Disability Type\"\r\n                margin=\"dense\"\r\n                name=\"disab_type\"\r\n                onChange={handleChange}\r\n                value={values.disab_type}\r\n                variant=\"outlined\"\r\n                />\r\n              <TextField\r\n                fullWidth\r\n                multiline\r\n                helperText=\"Brief explaination of the disability\"\r\n                label=\"Disability Definition\"\r\n                margin=\"dense\"\r\n                name=\"disab_definition\"\r\n                onChange={handleChange}\r\n                value={values.disab_definition}\r\n                variant=\"outlined\"\r\n                />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n            <Divider />\r\n              <CardHeader\r\n                subheader=\"Allergies\"\r\n                \r\n              />\r\n              <Divider />\r\n              <TextField\r\n                label=\"Allergies Name\"\r\n                margin=\"dense\"\r\n                name=\"alg_name\"\r\n                onChange={handleChange}\r\n                value={values.alg_name}\r\n                variant=\"outlined\"\r\n              />\r\n               &nbsp;\r\n               &nbsp;\r\n              <TextField\r\n                label=\"Allergy Type\"\r\n                margin=\"dense\"\r\n                name=\"alg_type\"\r\n                onChange={handleChange}\r\n                value={values.alg_type}\r\n                variant=\"outlined\"\r\n                />\r\n              <TextField\r\n                fullWidth \r\n                multiline\r\n                label=\"Allergy Severity\"\r\n                margin=\"dense\"\r\n                name=\"alg_severity\"\r\n                onChange={handleChange}\r\n                value={values.alg_severity}\r\n                helperText=\"Brief explaination on how severe allergy is.\"\r\n                variant=\"outlined\"\r\n                />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n            <Divider />\r\n              <CardHeader\r\n                subheader=\"Medication\"\r\n                \r\n              />\r\n              <Divider />\r\n              <TextField\r\n                fullWidth\r\n                label=\"Medication Name\"\r\n                margin=\"dense\"\r\n                name=\"med_name\"\r\n                onChange={handleChange}\r\n                value={values.med_name}\r\n                variant=\"outlined\"\r\n              />\r\n      \r\n              <TextField\r\n                fullWidth\r\n                label=\"Dosage\"\r\n                margin=\"dense\"\r\n                name=\"dosage\"\r\n                onChange={handleChange}\r\n                value={values.dosage}\r\n                variant=\"outlined\"\r\n                />\r\n              <TextField\r\n                label=\"Fill Count\"\r\n                margin=\"dense\"\r\n                name=\"fillCount\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.fillCount}\r\n                variant=\"outlined\"\r\n                />\r\n              <TextField\r\n                fullWidth\r\n                label=\"Prescribed By\"\r\n                margin=\"dense\"\r\n                name=\"prescribedBy\"\r\n                onChange={handleChange}\r\n                value={values.prescribedBy}\r\n                variant=\"outlined\"\r\n                />\r\n              \t&nbsp;<br></br>\r\n\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <DatePicker\r\n                  disableFuture\r\n                  id=\"date\"\r\n                  name=\"prescribedDate\"\r\n                  openTo=\"year\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  label=\"Prescribed Date\"\r\n                  views={[\"year\", \"month\", \"date\"]}\r\n                  value={values.prescribedDate}\r\n                  onChange={val => {\r\n                    handleChangeDate2(val);\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n              &nbsp;\r\n              &nbsp;\r\n\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <DatePicker\r\n                  disableFuture\r\n                  id=\"date\"\r\n                  name=\"renewDate\"\r\n                  openTo=\"year\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  label=\"Renew Date\"\r\n                  views={[\"year\", \"month\", \"date\"]}\r\n                  value={values.renewDate}\r\n                  onChange={val => {\r\n                    handleChangeDate3(val);\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField \r\n                fullWidth\r\n                id=\"select\" \r\n                label=\"Blood Type\"\r\n                onChange={handleChange} \r\n                value={values.bloodType}\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                name=\"bloodType\"\r\n                select>\r\n                <MenuItem value=\"A+\">A+</MenuItem>\r\n                <MenuItem value=\"A-\">A-</MenuItem>\r\n                <MenuItem value=\"B+\">B+</MenuItem>\r\n                <MenuItem value=\"B-\">B-</MenuItem>\r\n                <MenuItem value=\"AB+\">AB+</MenuItem>\r\n                <MenuItem value=\"AB-\">AB-</MenuItem>\r\n                <MenuItem value=\"O+\">O+</MenuItem>\r\n                <MenuItem value=\"O-\">O-</MenuItem>\r\n              </TextField> \r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n{/* Patients Emergency contact */}\r\n        <CardHeader\r\n          subheader=\"Your emergency contacts information\"\r\n          title=\"Emergency Contact\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                //helperText=\"Please specify emergency contacts first name\"\r\n                label=\"Name\"\r\n                margin=\"dense\"\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                // helperText=\"Emergency contact phone number\"\r\n                label=\"Phone Number\"\r\n                margin=\"dense\"\r\n                name=\"phoneNumber\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phoneNumber}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                //helperText=\"Emergency contanct email\"\r\n                label=\"Email Address\"\r\n                margin=\"dense\"\r\n                name=\"emg_email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.emg_email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={handleUpdate}\r\n          >\r\n            Save details\r\n          </Button>\r\n          <Snackbar\r\n            open={open}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n          >\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n                Account Updated\r\n            </Alert>\r\n          </Snackbar>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAccountDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AccountDetails;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n  LinearProgress\r\n} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { authenticate } from '../../../token';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  details: {\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginLeft: 'auto',\r\n    height: 110,\r\n    width: 100,\r\n    flexShrink: 0,\r\n    flexGrow: 0\r\n  },\r\n  progress: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  uploadButton: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst AccountProfile = props => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const id = authenticate();\r\n  const [count, setCount] = useState(0);\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    city: '',\r\n    country: '',\r\n    timezone: 'GTM-7',\r\n    avatar: '/images/avatars/avatar_11.png'\r\n  });\r\n\r\n\r\n  useEffect(async() => {\r\n    await axios.get(`http://localhost:3000/users/loadUser/${id}`)\r\n    .then(response => {\r\n      const data = response.data;\r\n      setUser({\r\n        ...user,\r\n          name: data.personalInfo.firstname + ' ' + data.personalInfo.lastname,\r\n          city: data.personalInfo.address.city,\r\n          country: data.personalInfo.address.country,\r\n      });\r\n\r\n      if(data.username !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      console.log(count);\r\n      if(data.personalInfo.firstname !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      console.log(count);\r\n      if(data.personalInfo.lastname !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.email !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.personalInfo.phoneNum !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.personalInfo.address.street !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.personalInfo.address.city !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.personalInfo.address.province !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.personalInfo.address.postalCode !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.personalInfo.address.country !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.personalInfo.emergencyContact.name !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.personalInfo.emergencyContact.phoneNumber !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.personalInfo.emergencyContact.emg_email !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.birthday !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.gender !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.height.height_num !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.height.height_unit !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.weight.weight_num !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.weight.weight_num !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.allergies.alg_name !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.allergies.alg_type !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.allergies.alg_severity !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.disabilities.disab_name !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.disabilities.disab_type !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.disabilities.disab_definition !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.medications.med_name !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.medications.dosage !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.medications.fillCount !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.medications.prescribedBy !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.medications.prescribedDate !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.medications.renewDate !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n      if(data.patientStats.bloodType !== ''){\r\n        setCount((count) => count + 1);\r\n      }\r\n\r\n      console.log(count);\r\n      setCount((count) => (count/32) * 100);\r\n\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  },[]);\r\n\r\n  // retrieve user using axios\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <div className={classes.details}>\r\n          <div>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h2\"\r\n            >\r\n              {user.name}\r\n            </Typography>\r\n            <Typography\r\n              className={classes.locationText}\r\n              color=\"textSecondary\"\r\n              variant=\"body1\"\r\n            >\r\n              {user.city}, {user.country}\r\n            </Typography>\r\n            <Typography\r\n              className={classes.dateText}\r\n              color=\"textSecondary\"\r\n              variant=\"body1\"\r\n            >\r\n              {moment().format('hh:mm A')} ({user.timezone})\r\n            </Typography>\r\n          </div>\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={user.avatar}\r\n          />\r\n        </div>\r\n        <div className={classes.progress}>\r\n          <Typography variant=\"body1\">Profile Completeness: {count}%</Typography>\r\n          <LinearProgress\r\n            value={count}\r\n            variant=\"determinate\"\r\n          />\r\n        </div>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Button\r\n          className={classes.uploadButton}\r\n          color=\"primary\"\r\n          variant=\"text\"\r\n        >\r\n          Upload picture\r\n        </Button>\r\n        <Button variant=\"text\">Remove picture</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAccountProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AccountProfile;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport token, { saveToken, tokenDetails, authenticate } from '../../../token';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Password = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    password: '',\r\n    confirm: ''\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const valid = values.password && values.password === values.confirm;\r\n\r\n  const handleReset = async event => {\r\n    const id = authenticate();\r\n    event.preventDefault();\r\n    await axios.post(`http://localhost:3000/login/changepass`, {\r\n\t\t\t\tid: id,\r\n\t\t\t\tpassword: values.password\r\n\t\t\t})\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tif (response.status === 200) {\r\n            alert('you good');\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n          alert('f');\r\n\t\t\t\t});\r\n    \r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form>\r\n        <CardHeader\r\n          subheader=\"Update password\"\r\n          title=\"Password\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Confirm password\"\r\n            name=\"confirm\"\r\n            onChange={handleChange}\r\n            style={{ marginTop: '1rem' }}\r\n            type=\"password\"\r\n            value={values.confirm}\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            disabled={!valid}\r\n            onClick={handleReset}\r\n          >\r\n            Update\r\n          </Button>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPassword.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Password;\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { saveToken, tokenDetails } from '../token';\r\nimport { AccountProfile, AccountDetails, Password } from './components';\r\nimport { authenticate } from '../token';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={4}\r\n          md={6}\r\n          xl={4}\r\n          xs={12}\r\n        >\r\n          <AccountProfile />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={4}\r\n          md={6}\r\n          xl={4}\r\n          xs={12}\r\n          >\r\n          <Password/>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={8}\r\n          md={6}\r\n          xl={8}\r\n          xs={12}\r\n        >\r\n          <AccountDetails />\r\n        </Grid>\r\n        \r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.error.main,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  difference: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  differenceIcon: {\r\n    color: theme.palette.error.dark\r\n  },\r\n  differenceValue: {\r\n    color: theme.palette.error.dark,\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Budget = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"body2\"\r\n            >\r\n              FITBIT - STEPS\r\n            </Typography>\r\n            <Typography variant=\"h3\">150000</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <MoneyIcon className={classes.icon} />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <div className={classes.difference}>\r\n          <ArrowDownwardIcon className={classes.differenceIcon} />\r\n          <Typography\r\n            className={classes.differenceValue}\r\n            variant=\"body2\"\r\n          >\r\n            12%\r\n          </Typography>\r\n          <Typography\r\n            className={classes.caption}\r\n            variant=\"caption\"\r\n          >\r\n            Since last month\r\n          </Typography>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nBudget.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Budget;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  Button,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nimport mockData from './data';\r\nimport { StatusBullet } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 800\r\n  },\r\n  statusContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  status: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst statusColors = {\r\n  delivered: 'success',\r\n  pending: 'info',\r\n  refunded: 'danger'\r\n};\r\n\r\nconst LatestOrders = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [entries, setEntries] = useState([]);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader\r\n        action={\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            href=\"/entry\"\r\n          >\r\n            New entry\r\n          </Button>\r\n        }\r\n        title=\"Latest Entries\"\r\n      />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Title</TableCell>\r\n                  <TableCell>Category</TableCell>\r\n                  <TableCell sortDirection=\"desc\">\r\n                    <Tooltip\r\n                      enterDelay={300}\r\n                      title=\"Sort\"\r\n                    >\r\n                      <TableSortLabel\r\n                        active\r\n                        direction=\"desc\"\r\n                      >\r\n                        Contents\r\n                      </TableSortLabel>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                  <TableCell>Date</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {entries.map(order => (\r\n                  <TableRow\r\n                    hover\r\n                    key={order.id}\r\n                  >\r\n                    <TableCell>{order.ref}</TableCell>\r\n                    <TableCell>{order.customer.name}</TableCell>\r\n                    <TableCell>\r\n                      {moment(order.createdAt).format('DD/MM/YYYY')}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <div className={classes.statusContainer}>\r\n                        <StatusBullet\r\n                          className={classes.status}\r\n                          color={statusColors[order.status]}\r\n                          size=\"sm\"\r\n                        />\r\n                        {order.status}\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions className={classes.actions}>\r\n        <Button\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"text\"\r\n          href=\"/entry\"\r\n        >\r\n          View all <ArrowRightIcon />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestOrders.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestOrders;\r\n","import uuid from 'uuid/v1';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1049',\r\n    amount: 30.5,\r\n    customer: {\r\n      name: 'Ekaterina Tankova'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1048',\r\n    amount: 25.1,\r\n    customer: {\r\n      name: 'Cao Yu'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1047',\r\n    amount: 10.99,\r\n    customer: {\r\n      name: 'Alexa Richardson'\r\n    },\r\n    createdAt: 1554930000000,\r\n    status: 'refunded'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1046',\r\n    amount: 96.43,\r\n    customer: {\r\n      name: 'Anje Keizer'\r\n    },\r\n    createdAt: 1554757200000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1045',\r\n    amount: 32.54,\r\n    customer: {\r\n      name: 'Clarke Gillebert'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1044',\r\n    amount: 16.76,\r\n    customer: {\r\n      name: 'Adam Denisov'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  }\r\n];\r\n","import uuid from 'uuid/v1';\r\nimport moment from 'moment';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    name: 'Dropbox',\r\n    imageUrl: '/images/products/product_1.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Medium Corporation',\r\n    imageUrl: '/images/products/product_2.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Slack',\r\n    imageUrl: '/images/products/product_3.png',\r\n    updatedAt: moment().subtract(3, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Lyft',\r\n    imageUrl: '/images/products/product_4.png',\r\n    updatedAt: moment().subtract(5, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'GitHub',\r\n    imageUrl: '/images/products/product_5.png',\r\n    updatedAt: moment().subtract(9, 'hours')\r\n  }\r\n];\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport mockData from './data';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  image: {\r\n    height: 48,\r\n    width: 48\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst LatestProducts = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [products] = useState(mockData);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader\r\n        subtitle={`${products.length} in total`}\r\n        title=\"Latest products\"\r\n      />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <List>\r\n          {products.map((product, i) => (\r\n            <ListItem\r\n              divider={i < products.length - 1}\r\n              key={product.id}\r\n            >\r\n              <ListItemAvatar>\r\n                <img\r\n                  alt=\"Product\"\r\n                  className={classes.image}\r\n                  src={product.imageUrl}\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={product.name}\r\n                secondary={`Updated ${product.updatedAt.fromNow()}`}\r\n              />\r\n              <IconButton\r\n                edge=\"end\"\r\n                size=\"small\"\r\n              >\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions className={classes.actions}>\r\n        <Button\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all <ArrowRightIcon />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestProducts.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestProducts;\r\n","import palette from 'theme/palette';\r\n\r\nexport const data = {\r\n  labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug'],\r\n  datasets: [\r\n    {\r\n      label: 'This week',\r\n      backgroundColor: palette.primary.main,\r\n      data: [3, 2, 1, 3, 1, 2, 3]\r\n    },\r\n    {\r\n      label: 'Last week',\r\n      backgroundColor: palette.neutral,\r\n      data: [2, 2, 3, 3, 2, 3, 2]\r\n    }\r\n  ]\r\n};\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  animation: false,\r\n  legend: { display: false },\r\n  cornerRadius: 20,\r\n  tooltips: {\r\n    enabled: true,\r\n    mode: 'index',\r\n    intersect: false,\r\n    borderWidth: 1,\r\n    borderColor: palette.divider,\r\n    backgroundColor: palette.white,\r\n    titleFontColor: palette.text.primary,\r\n    bodyFontColor: palette.text.secondary,\r\n    footerFontColor: palette.text.secondary\r\n  },\r\n  layout: { padding: 0 },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        barThickness: 12,\r\n        maxBarThickness: 10,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 0.5,\r\n        ticks: {\r\n          fontColor: palette.text.secondary\r\n        },\r\n        gridLines: {\r\n          display: false,\r\n          drawBorder: false\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          fontColor: palette.text.secondary,\r\n          beginAtZero: true,\r\n          min: 0\r\n        },\r\n        gridLines: {\r\n          borderDash: [2],\r\n          borderDashOffset: [2],\r\n          color: palette.divider,\r\n          drawBorder: false,\r\n          zeroLineBorderDash: [2],\r\n          zeroLineBorderDashOffset: [2],\r\n          zeroLineColor: palette.divider\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Button\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nimport { data, options } from './chart';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  chartContainer: {\r\n    height: 400,\r\n    position: 'relative'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst LatestSales = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader\r\n        action={\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Last 7 days <ArrowDropDownIcon />\r\n          </Button>\r\n        }\r\n        title=\"Entries Per Day\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <div className={classes.chartContainer}>\r\n          <Bar\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </div>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions className={classes.actions}>\r\n        <Button\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          Overview <ArrowRightIcon />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestSales.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestSales;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  Avatar,\r\n  LinearProgress\r\n} from '@material-ui/core';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  progress: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst TasksProgress = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"body2\"\r\n            >\r\n              PROFILE PROGRESS\r\n            </Typography>\r\n            <Typography variant=\"h3\">75%</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <InsertChartIcon className={classes.icon} />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <LinearProgress\r\n          className={classes.progress}\r\n          value={75.5}\r\n          variant=\"determinate\"\r\n        />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTasksProgress.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TasksProgress;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.white,\r\n    color: theme.palette.primary.main,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  }\r\n}));\r\n\r\nconst TotalProfit = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"inherit\"\r\n              gutterBottom\r\n              variant=\"body2\"\r\n            >\r\n              TOTAL PROFIT\r\n            </Typography>\r\n            <Typography\r\n              color=\"inherit\"\r\n              variant=\"h3\"\r\n            >\r\n              $23,200\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <AttachMoneyIcon className={classes.icon} />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalProfit.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalProfit;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport BookIcon from '@material-ui/icons/LibraryBooks';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.success.main,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  difference: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  differenceIcon: {\r\n    color: theme.palette.success.dark\r\n  },\r\n  differenceValue: {\r\n    color: theme.palette.success.dark,\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst TotalUsers = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"body2\"\r\n            >\r\n              TOTAL ENTRIES\r\n            </Typography>\r\n            <Typography variant=\"h3\">250</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <BookIcon className={classes.icon} />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalUsers.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalUsers;\r\n","import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  IconButton,\r\n  Divider,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport Heart from '@material-ui/icons/FavoriteRounded';\r\nimport Face from '@material-ui/icons/Face';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport CKDIcon from '@material-ui/icons/LocalHospital';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  chartContainer: {\r\n    position: 'relative',\r\n    height: '300px'\r\n  },\r\n  stats: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  device: {\r\n    textAlign: 'center',\r\n    padding: theme.spacing(1)\r\n  },\r\n  deviceIcon: {\r\n    color: theme.palette.icon\r\n  }\r\n}));\r\n\r\nconst UsersByDevice = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [63, 15, 22],\r\n        backgroundColor: [\r\n          theme.palette.primary.main,\r\n          theme.palette.error.main,\r\n          theme.palette.warning.main\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: theme.palette.white,\r\n        hoverBorderColor: theme.palette.white\r\n      }\r\n    ],\r\n    labels: ['Headache', 'Blood Pressure', 'CKD']\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n      display: false\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    tooltips: {\r\n      enabled: true,\r\n      mode: 'index',\r\n      intersect: false,\r\n      borderWidth: 1,\r\n      borderColor: theme.palette.divider,\r\n      backgroundColor: theme.palette.white,\r\n      titleFontColor: theme.palette.text.primary,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      footerFontColor: theme.palette.text.secondary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Headache',\r\n      value: '63',\r\n      icon: <Face />,\r\n      color: theme.palette.primary.main\r\n    },\r\n    {\r\n      title: 'Blood Pressure',\r\n      value: '15',\r\n      icon: <Heart />,\r\n      color: theme.palette.error.main\r\n    },\r\n    {\r\n      title: 'CKD',\r\n      value: '23',\r\n      icon: <CKDIcon />,\r\n      color: theme.palette.warning.main\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader\r\n        action={\r\n          <IconButton size=\"small\">\r\n            <RefreshIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"Symptom Recurrence In Entries\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <div className={classes.chartContainer}>\r\n          <Doughnut\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className={classes.stats}>\r\n          {devices.map(device => (\r\n            <div\r\n              className={classes.device}\r\n              key={device.title}\r\n            >\r\n              <span className={classes.deviceIcon}>{device.icon}</span>\r\n              <Typography variant=\"body1\">{device.title}</Typography>\r\n              <Typography\r\n                style={{ color: device.color }}\r\n                variant=\"h2\"\r\n              >\r\n                {device.value}%\r\n              </Typography>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUsersByDevice.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UsersByDevice;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport {\r\n  Budget,\r\n  TotalUsers,\r\n  TasksProgress,\r\n  TotalProfit,\r\n  LatestSales,\r\n  UsersByDevice,\r\n  LatestProducts,\r\n  LatestOrders,\r\n  Entry\r\n} from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={4}\r\n          sm={6}\r\n          xl={4}\r\n          xs={12}\r\n        >\r\n          <Budget />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={4}\r\n          sm={6}\r\n          xl={4}\r\n          xs={12}\r\n        >\r\n          <TotalUsers />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={4}\r\n          sm={6}\r\n          xl={4}\r\n          xs={12}\r\n        >\r\n          <TasksProgress />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={8}\r\n          md={12}\r\n          xl={9}\r\n          xs={12}\r\n        >\r\n          <LatestSales />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={4}\r\n          md={6}\r\n          xl={3}\r\n          xs={12}\r\n        >\r\n          <UsersByDevice />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={12}\r\n          md={12}\r\n          xl={12}\r\n          xs={12}\r\n        >\r\n          <LatestOrders />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={8}\r\n          md={12}\r\n          xl={9}\r\n          xs={12}\r\n        >\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Grid,\r\n    Button,\r\n    IconButton,\r\n    TextField,\r\n    Link,\r\n    Typography,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle\r\n} from '@material-ui/core';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { authenticate } from '../../../../views/token';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100%'\r\n    },\r\n    content: {\r\n        alignItems: 'center',\r\n        display: 'flex'\r\n    },\r\n    title: {\r\n        fontWeight: 700\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.error.main,\r\n        height: 56,\r\n        width: 56\r\n    },\r\n    icon: {\r\n        height: 32,\r\n        width: 32\r\n    },\r\n    difference: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    differenceIcon: {\r\n        color: theme.palette.error.dark\r\n    },\r\n    differenceValue: {\r\n        color: theme.palette.error.dark,\r\n        marginRight: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nconst Entry = props => {\r\n    const { className, ...rest } = props;\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [formState, setFormState] = useState({\r\n        open: false,\r\n        values: {},\r\n        touched: {},\r\n        date: new Date(),\r\n        time: new Date()\r\n    });\r\n\r\n    useEffect(() => {\r\n        setFormState(formState => ({\r\n            ...formState,\r\n            values: {\r\n                ...formState.values,\r\n                ['time']: new Date(),\r\n                ['date']: new Date()\r\n            }\r\n        }));\r\n    }, []);\r\n\r\n    console.log(formState.values);\r\n    const pickTime = (time) => {\r\n        setFormState(formState => ({\r\n            ...formState,\r\n            values: {\r\n                ...formState.values,\r\n                ['time']: time\r\n            }\r\n        }));\r\n\r\n    }\r\n\r\n    const pickDate = (date) => {\r\n        setFormState(formState => ({\r\n            ...formState,\r\n            values: {\r\n                ...formState.values,\r\n                ['date']: date\r\n            }\r\n        }));\r\n    }\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        //event.persist();\r\n\r\n\r\n        setFormState(formState => ({\r\n            ...formState,\r\n            values: {\r\n                ...formState.values,\r\n                [name]: value\r\n            }\r\n        }));\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        setFormState(formState => ({\r\n            ...formState,\r\n            open: true,\r\n            values: {\r\n                ...formState.values,\r\n                ['time']: new Date(),\r\n                ['date']: new Date(),\r\n            }\r\n        }));\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setFormState(formState => ({\r\n            ...formState,\r\n            open: false,\r\n            values: ''\r\n        }));\r\n    };\r\n\r\n    const submit = async () => {\r\n        const id = authenticate();\r\n        console.log(formState.values);\r\n        await axios\r\n            .post(\"http://localhost:3000/entry/add/\", {\r\n                id: id,\r\n                contents: formState.values.contents,\r\n                title: formState.values.title,\r\n                date: formState.values.date.toISOString().substring(0, 10),\r\n                time: formState.values.time.toISOString().substring(11, 16)\r\n            })\r\n            .then((response) => {\r\n                alert(response.data)\r\n\r\n                setFormState(formState => ({\r\n                    ...formState,\r\n                    values: ''\r\n                }));\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                New Entry\r\n                 </Button>\r\n            <Dialog open={formState.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">New Entry</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To create an entry, please submit the contents of your entry.\r\n                        </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"title\"\r\n                        name=\"title\"\r\n                        multiline\r\n                        label=\"Title\"\r\n                        type=\"title\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={formState.values.title}\r\n                    />\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date\"\r\n                            name=\"date\"\r\n                            label=\"Date\"\r\n                            value={formState.values.date}\r\n                            onChange={pickDate}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        <KeyboardTimePicker\r\n                            margin=\"normal\"\r\n                            id=\"time\"\r\n                            label=\"Time picker\"\r\n                            name=\"time\"\r\n                            value={formState.values.time}\r\n                            onChange={pickTime}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change time',\r\n                            }}\r\n                        />\r\n\r\n                    </MuiPickersUtilsProvider>\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"contents\"\r\n                        name=\"contents\"\r\n                        multiline\r\n                        label=\"Contents\"\r\n                        type=\"contents\"\r\n                        fullWidth\r\n                        rows={10}\r\n                        onChange={handleChange}\r\n                        value={formState.values.contents}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={() => { handleClose(); submit(); }} color=\"primary\">\r\n                        Submit\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div >\r\n\r\n    )\r\n};\r\n\r\nEntry.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\n\r\nexport default Entry;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  },\r\n  content: {\r\n    paddingTop: 150,\r\n    textAlign: 'center'\r\n  },\r\n  image: {\r\n    marginTop: 50,\r\n    display: 'inline-block',\r\n    maxWidth: '100%',\r\n    width: 560\r\n  }\r\n}));\r\n\r\nconst NotFound = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={6}\r\n          xs={12}\r\n        >\r\n          <div className={classes.content}>\r\n            <Typography variant=\"h1\">\r\n              404: The page you are looking for isn’t here\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              You either tried some shady route or you came here by mistake.\r\n              Whichever it is, try using the navigation\r\n            </Typography>\r\n            <img\r\n              alt=\"Under development\"\r\n              className={classes.image}\r\n              src=\"/images/undraw_page_not_found_su7k.svg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  },\r\n  iframe: {\r\n    width: '100%',\r\n    minHeight: 640,\r\n    border: 0\r\n  }\r\n}));\r\n\r\nconst Icons = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <iframe\r\n        className={classes.iframe}\r\n        src=\"https://material.io/tools/icons/?icon=accessibility&style=outline\"\r\n        title=\"Material Design icons\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Icons;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Typography,\r\n  Grid,\r\n  Divider\r\n} from '@material-ui/core';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  imageContainer: {\r\n    height: 64,\r\n    width: 64,\r\n    margin: '0 auto',\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    borderRadius: '5px',\r\n    overflow: 'hidden',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  image: {\r\n    width: '100%'\r\n  },\r\n  statsItem: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  statsIcon: {\r\n    color: theme.palette.icon,\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst ProductCard = props => {\r\n  const { className, product, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <div className={classes.imageContainer}>\r\n          <img\r\n            alt=\"Product\"\r\n            className={classes.image}\r\n            src={product.imageUrl}\r\n          />\r\n        </div>\r\n        <Typography\r\n          align=\"center\"\r\n          gutterBottom\r\n          variant=\"h4\"\r\n        >\r\n          {product.title}\r\n        </Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          variant=\"body1\"\r\n        >\r\n          {product.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n        >\r\n          <Grid\r\n            className={classes.statsItem}\r\n            item\r\n          >\r\n            <AccessTimeIcon className={classes.statsIcon} />\r\n            <Typography\r\n              display=\"inline\"\r\n              variant=\"body2\"\r\n            >\r\n              Updated 2hr ago\r\n            </Typography>\r\n          </Grid>\r\n          <Grid\r\n            className={classes.statsItem}\r\n            item\r\n          >\r\n            <GetAppIcon className={classes.statsIcon} />\r\n            <Typography\r\n              display=\"inline\"\r\n              variant=\"body2\"\r\n            >\r\n              {product.totalDownloads} Downloads\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProductCard.propTypes = {\r\n  className: PropTypes.string,\r\n  product: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProductCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { SearchInput } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  row: {\r\n    height: '42px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  spacer: {\r\n    flexGrow: 1\r\n  },\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  searchInput: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst ProductsToolbar = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <div className={classes.row}>\r\n        <span className={classes.spacer} />\r\n        <Button className={classes.importButton}>Import</Button>\r\n        <Button className={classes.exportButton}>Export</Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Add product\r\n        </Button>\r\n      </div>\r\n      <div className={classes.row}>\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search product\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProductsToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProductsToolbar;\r\n","import uuid from 'uuid/v1';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    title: 'Dropbox',\r\n    description:\r\n      'Dropbox is a file hosting service that offers cloud storage, file synchronization, a personal cloud.',\r\n    imageUrl: '/images/products/product_1.png',\r\n    totalDownloads: '594',\r\n    updatedAt: '27/03/2019'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    title: 'Medium Corporation',\r\n    description:\r\n      'Medium is an online publishing platform developed by Evan Williams, and launched in August 2012.',\r\n    imageUrl: '/images/products/product_2.png',\r\n    totalDownloads: '625',\r\n    createdAt: '31/03/2019'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    title: 'Slack',\r\n    description:\r\n      'Slack is a cloud-based set of team collaboration tools and services, founded by Stewart Butterfield.',\r\n    imageUrl: '/images/products/product_3.png',\r\n    totalDownloads: '857',\r\n    createdAt: '03/04/2019'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    title: 'Lyft',\r\n    description:\r\n      'Lyft is an on-demand transportation company based in San Francisco, California.',\r\n    imageUrl: '/images/products/product_4.png',\r\n    totalDownloads: '406',\r\n    createdAt: '04/04/2019'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    title: 'GitHub',\r\n    description:\r\n      'GitHub is a web-based hosting service for version control of code using Git.',\r\n    imageUrl: '/images/products/product_5.png',\r\n    totalDownloads: '835',\r\n    createdAt: '04/04/2019'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    title: 'Squarespace',\r\n    description:\r\n      'Squarespace provides software as a service for website building and hosting. Headquartered in NYC.',\r\n    imageUrl: '/images/products/product_6.png',\r\n    totalDownloads: '835',\r\n    createdAt: '04/04/2019'\r\n  }\r\n];\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { IconButton, Grid, Typography } from '@material-ui/core';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\nimport { ProductsToolbar, ProductCard } from './components';\r\nimport mockData from './data';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  pagination: {\r\n    marginTop: theme.spacing(3),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst ProductList = () => {\r\n  const classes = useStyles();\r\n\r\n  const [products] = useState(mockData);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ProductsToolbar />\r\n      <div className={classes.content}>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          {products.map(product => (\r\n            <Grid\r\n              item\r\n              key={product.id}\r\n              lg={4}\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <ProductCard product={product} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n      <div className={classes.pagination}>\r\n        <Typography variant=\"caption\">1-6 of 20</Typography>\r\n        <IconButton>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n        <IconButton>\r\n          <ChevronRightIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Grid,\r\n  Divider,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Typography,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  item: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  }\r\n}));\r\n\r\nconst Notifications = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form>\r\n        <CardHeader\r\n          subheader=\"Manage the notifications\"\r\n          title=\"Notifications\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={6}\r\n            wrap=\"wrap\"\r\n          >\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Notifications\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    defaultChecked //\r\n                  />\r\n                }\r\n                label=\"Email\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    defaultChecked //\r\n                  />\r\n                }\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox color=\"primary\" />}\r\n                label=\"Text Messages\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    defaultChecked //\r\n                  />\r\n                }\r\n                label=\"Phone calls\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Messages\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    defaultChecked //\r\n                  />\r\n                }\r\n                label=\"Email\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox color=\"primary\" />}\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    defaultChecked //\r\n                  />\r\n                }\r\n                label=\"Phone calls\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nNotifications.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Password = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    password: '',\r\n    confirm: ''\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form>\r\n        <CardHeader\r\n          subheader=\"Update password\"\r\n          title=\"Password\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Confirm password\"\r\n            name=\"confirm\"\r\n            onChange={handleChange}\r\n            style={{ marginTop: '1rem' }}\r\n            type=\"password\"\r\n            value={values.confirm}\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n          >\r\n            Update\r\n          </Button>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPassword.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Password;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { Notifications, Password } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Settings = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          md={7}\r\n          xs={12}\r\n        >\r\n          <Notifications />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          md={5}\r\n          xs={12}\r\n        >\r\n          <Password />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\n\r\n// Material components\r\nimport { SvgIcon } from '@material-ui/core';\r\n\r\nexport default function Facebook(props) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M9.53144612,22.005 L9.53144612,13.0552149 L6.44166667,13.0552149 L6.44166667,9.49875 L9.53144612,9.49875 L9.53144612,6.68484375 C9.53144612,5.19972656 9.95946769,4.04680661 10.8155103,3.22608401 C11.6715529,2.4053613 12.808485,1.995 14.2263057,1.995 C15.3766134,1.995 16.3129099,2.04710915 17.0351961,2.15132812 L17.0351961,5.3169726 L15.1090998,5.3169726 C14.3868137,5.3169726 13.8919142,5.47330073 13.6244006,5.78595698 C13.4103902,6.04650407 13.3033846,6.46337874 13.3033846,7.03658198 L13.3033846,9.49875 L16.71418,9.49875 L16.2326559,13.0552149 L13.3033846,13.0552149 L13.3033846,22.005 L9.53144612,22.005 Z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n// Material components\r\nimport { SvgIcon } from '@material-ui/core';\r\n\r\nexport default function Google(props) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M21,12.2177419 C21,13.9112905 20.6311475,15.4233869 19.8934426,16.7540323 C19.1557377,18.0846776 18.1168031,19.1249998 16.7766393,19.875 C15.4364756,20.6250002 13.8934424,21 12.147541,21 C10.4999998,21 8.97540984,20.5947579 7.57377049,19.7842742 C6.17213115,18.9737905 5.05942604,17.8790323 4.23565574,16.5 C3.41188543,15.1209677 3,13.6209679 3,12 C3,10.3790321 3.41188543,8.87903226 4.23565574,7.5 C5.05942604,6.12096774 6.17213115,5.02620949 7.57377049,4.21572581 C8.97540984,3.40524212 10.4999998,3 12.147541,3 C14.5327871,3 16.5737705,3.78629051 18.2704918,5.35887097 L15.7991803,7.71774194 C15.0122953,6.96774175 14.0655738,6.52016129 12.9590164,6.375 C11.9262295,6.22983871 10.9057375,6.375 9.89754098,6.81048387 C8.88934445,7.24596774 8.07786904,7.89919355 7.46311475,8.77016129 C6.79918033,9.71370968 6.46721311,10.7903228 6.46721311,12 C6.46721311,13.0403228 6.72540984,13.9899192 7.24180328,14.8487903 C7.75819672,15.7076615 8.4467215,16.3971776 9.30737705,16.9173387 C10.1680326,17.4374998 11.1147541,17.6975806 12.147541,17.6975806 C13.2540984,17.6975806 14.2254096,17.455645 15.0614754,16.9717742 C15.7254098,16.5846772 16.2786885,16.0645161 16.7213115,15.4112903 C17.0409838,14.8790321 17.2499998,14.3467744 17.3483607,13.8145161 L12.147541,13.8145161 L12.147541,10.6935484 L20.852459,10.6935484 C20.9508199,11.2258066 21,11.7338712 21,12.2177419 Z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport validate from 'validate.js';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport axios from 'axios';\r\nimport { saveToken, tokenDetails } from '../token';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Facebook as FacebookIcon, Google as GoogleIcon } from 'icons';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst schema = {\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true,\r\n    length: {\r\n      maximum: 64\r\n    }\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 128\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: '100%'\r\n  },\r\n  grid: {\r\n    height: '100%'\r\n  },\r\n  quoteContainer: {\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  quote: {\r\n    backgroundColor: theme.palette.neutral,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: 'url(/images/auth.jpg)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  },\r\n  quoteInner: {\r\n    textAlign: 'center',\r\n    flexBasis: '600px'\r\n  },\r\n  quoteText: {\r\n    color: theme.palette.white,\r\n    fontWeight: 300\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.white\r\n  },\r\n  bio: {\r\n    color: theme.palette.white\r\n  },\r\n  contentContainer: {},\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  logoImage: {\r\n    marginLeft: theme.spacing(4)\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  socialButtons: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  socialIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  sugestion: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  signInButton: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nconst SignIn = props => {\r\n  const { history } = props;\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n    error: false,\r\n    success: false,\r\n    verified: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === 'checkbox'\r\n            ? event.target.checked\r\n            : event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSignIn = event => {\r\n    event.preventDefault();\r\n    axios\r\n      .post('http://localhost:3000/login/login', {\r\n        auth: {\r\n          email: formState.values.email,\r\n          password: formState.values.password\r\n        },\r\n        withCredentials: true\r\n      })\r\n      .then(response => {\r\n        console.log(response)\r\n        setFormState(formState => ({\r\n          ...formState,\r\n          success: true,\r\n          error: false\r\n        }));\r\n        saveToken(response.data);\r\n        history.push('/dashboard');\r\n      })\r\n      .catch(error => {\r\n        setFormState(formState => ({\r\n          ...formState,\r\n          success: false,\r\n          error: true\r\n        }));\r\n      });\r\n    handleClick();\r\n  };\r\n\r\n  const hasError = field =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid className={classes.grid} container>\r\n        <Grid className={classes.quoteContainer} item lg={5}>\r\n          <div className={classes.quote}>\r\n            <div className={classes.quoteInner}>\r\n              <Typography className={classes.quoteText} variant=\"h1\">\r\n                PROJECT CLEAR\r\n              </Typography>\r\n              <div className={classes.person}>\r\n                <Typography className={classes.name} variant=\"body1\">\r\n                  3ELM Consulting\r\n                </Typography>\r\n                <Typography className={classes.bio} variant=\"body2\">\r\n                  Southern Alberta Institute of Technology\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid className={classes.content} item lg={7} xs={12}>\r\n          <div className={classes.content}>\r\n            <div className={classes.contentHeader}>\r\n              <IconButton onClick={handleBack}>\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.contentBody}>\r\n              <form className={classes.form} onSubmit={handleSignIn}>\r\n                <Typography className={classes.title} variant=\"h2\">\r\n                  Sign in\r\n                </Typography>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Sign in with social media\r\n                </Typography>\r\n                <Grid className={classes.socialButtons} container spacing={2}>\r\n                  <Grid item>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      // onClick={handleSignIn}\r\n                      size=\"large\"\r\n                      variant=\"contained\">\r\n                      <FacebookIcon className={classes.socialIcon} />\r\n                      Login with Facebook\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button\r\n                      // onClick={handleSignIn}\r\n                      size=\"large\"\r\n                      variant=\"contained\">\r\n                      <GoogleIcon className={classes.socialIcon} />\r\n                      Login with Google\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Typography\r\n                  align=\"center\"\r\n                  className={classes.sugestion}\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\">\r\n                  or login with email address\r\n                </Typography>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('email')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('email') ? formState.errors.email[0] : null\r\n                  }\r\n                  label=\"Email address\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.email || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('password')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('password') ? formState.errors.password[0] : null\r\n                  }\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={formState.values.password || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Button\r\n                  className={classes.signInButton}\r\n                  color=\"primary\"\r\n                  disabled={!formState.isValid}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Sign in now\r\n                </Button>\r\n                <Snackbar\r\n                  open={open}\r\n                  autoHideDuration={6000}\r\n                  onClose={handleClose}>\r\n                  {formState.error ? (\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                      Invalid Email or Password!\r\n                    </Alert>\r\n                  ) : formState.success ? (\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                      Login Successful!\r\n                    </Alert>\r\n                  ) : null}\r\n                </Snackbar>\r\n                <Typography color=\"textSecondary\" variant=\"body1\">\r\n                  Don't have an account?{' '}\r\n                  <Link component={RouterLink} to=\"/sign-up\" variant=\"h6\">\r\n                    Sign up\r\n                  </Link>\r\n                </Typography>\r\n                <Typography color=\"textSecondary\" variant=\"body1\">\r\n                  Cant remember password?{' '}\r\n                  <Link component={RouterLink} to=\"/forgot\" variant=\"h6\">\r\n                    Reset\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignIn.propTypes = {\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(SignIn);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport validate from 'validate.js';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  FormHelperText,\r\n  Checkbox,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport axios from 'axios';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst schema = {\r\n  userName: {\r\n    presence: { allowEmpty: false, message: 'is required'},\r\n    length: {\r\n      maximum: 32\r\n    }\r\n  },\r\n  firstName: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 32\r\n    }\r\n  },\r\n  lastName: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 32\r\n    }\r\n  },\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true,\r\n    length: {\r\n      maximum: 64\r\n    }\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 128\r\n    }\r\n  },\r\n  phoneNum: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 10\r\n    },\r\n    format: {\r\n      pattern: \"^[0-9]{10}$\",\r\n      message: \"\"\r\n    }\r\n  },\r\n  licenseid:{\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 6\r\n    },\r\n    format: {\r\n      pattern: \"^[0-9]{6}$\",\r\n      message: \"\"\r\n    }\r\n  },\r\n  policy: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    checked: true\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: '100%'\r\n  },\r\n  grid: {\r\n    height: '100%'\r\n  },\r\n  quoteContainer: {\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  quote: {\r\n    backgroundColor: theme.palette.neutral,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: 'url(/images/auth.jpg)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  },\r\n  quoteInner: {\r\n    textAlign: 'center',\r\n    flexBasis: '600px'\r\n  },\r\n  quoteText: {\r\n    color: theme.palette.white,\r\n    fontWeight: 300\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.white\r\n  },\r\n  bio: {\r\n    color: theme.palette.white\r\n  },\r\n  contentContainer: {},\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  logoImage: {\r\n    marginLeft: theme.spacing(4)\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  policy: {\r\n    marginTop: theme.spacing(1),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  policyCheckbox: {\r\n    marginLeft: '-14px'\r\n  },\r\n  signUpButton: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nconst SignUpMed = props => {\r\n  const { history } = props;\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === 'checkbox'\r\n            ? event.target.checked\r\n            : event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleSignUp = event => {\r\n    event.preventDefault();\r\n\r\n    axios\r\n\t\t\t.post(\"http://localhost:3000/medicalprovider/add/medicalpro\", {\r\n\t\t\t\tfirstname: formState.values.firstName,\r\n\t\t\t\tlastname: formState.values.lastName,\r\n\t\t\t\tusername: formState.values.userName,\r\n\t\t\t\temail: formState.values.email,\r\n\t\t\t\tphoneNum: formState.values.phoneNum,\r\n        password: formState.values.password,\r\n        licenseid: formState.values.licenseid,\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n        handleClick();\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n  };\r\n\r\n  const hasError = field =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        className={classes.grid}\r\n        container\r\n      >\r\n        <Grid\r\n          className={classes.quoteContainer}\r\n          item\r\n          lg={5}\r\n        >\r\n          <div className={classes.quote}>\r\n            <div className={classes.quoteInner}>\r\n              <Typography\r\n                className={classes.quoteText}\r\n                variant=\"h1\"\r\n              >\r\n                Join Us\r\n              </Typography>\r\n              <div className={classes.person}>\r\n                <Typography\r\n                  className={classes.name}\r\n                  variant=\"body1\"\r\n                >\r\n                  Take Control Of Your Health\r\n                </Typography>\r\n                <Typography\r\n                  className={classes.bio}\r\n                  variant=\"body2\"\r\n                >\r\n                  3ELM\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.content}\r\n          item\r\n          lg={7}\r\n          xs={12}\r\n        >\r\n          <div className={classes.content}>\r\n            <div className={classes.contentHeader}>\r\n              <IconButton onClick={handleBack}>\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.contentBody}>\r\n              <form\r\n                className={classes.form}\r\n                onSubmit={handleSignUp}\r\n              >\r\n                <Typography\r\n                  className={classes.title}\r\n                  variant=\"h2\"\r\n                >\r\n                  Create new account\r\n                </Typography>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Use your email to create new account\r\n                </Typography>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('userName')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('userName') ? formState.errors.userName[0] : null\r\n                  }\r\n                  label=\"Username\"\r\n                  name=\"userName\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.userName || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('firstName')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('firstName') ? formState.errors.firstName[0] : null\r\n                  }\r\n                  label=\"First name\"\r\n                  name=\"firstName\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.firstName || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('lastName')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('lastName') ? formState.errors.lastName[0] : null\r\n                  }\r\n                  label=\"Last name\"\r\n                  name=\"lastName\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.lastName || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('email')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('email') ? formState.errors.email[0] : null\r\n                  }\r\n                  label=\"Email address\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.email || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('password')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('password') ? formState.errors.password[0] : null\r\n                  }\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={formState.values.password || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('phoneNum')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('phoneNum') ? formState.errors.phoneNum[0] : null\r\n                  }\r\n                  label=\"Phone Number\"\r\n                  name=\"phoneNum\"\r\n                  onChange={handleChange}\r\n                  type=\"phoneNum\"\r\n                  value={formState.values.phoneNum || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('licenseid')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('licenseid') ? formState.errors.licenseid[0] : null\r\n                  }\r\n                  label=\"License Number\"\r\n                  name=\"licenseid\"\r\n                  onChange={handleChange}\r\n                  type=\"licenseid\"\r\n                  value={formState.values.licenseid || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <div className={classes.policy}>\r\n                  <Checkbox\r\n                    checked={formState.values.policy || false}\r\n                    className={classes.policyCheckbox}\r\n                    color=\"primary\"\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    className={classes.policyText}\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    I have read the{' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </div>\r\n                {hasError('policy') && (\r\n                  <FormHelperText error>\r\n                    {formState.errors.policy[0]}\r\n                  </FormHelperText>\r\n                )}\r\n                <Button\r\n                  className={classes.signUpButton}\r\n                  color=\"primary\"\r\n                  disabled={!formState.isValid}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Sign up now\r\n                </Button>\r\n                <Snackbar\r\n                  open={open}\r\n                  autoHideDuration={6000}\r\n                  onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                    A confirmation email has been sent!\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?{' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/sign-in\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignUpMed.propTypes = {\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(SignUpMed);","import React, { Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography as MuiTypography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst variants = {\r\n  h1: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h2: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h3: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h4: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h5: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h6: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  subtitle1: 'Leo varius justo aptent arcu urna felis pede nisl',\r\n  subtitle2: 'Leo varius justo aptent arcu urna felis pede nisl',\r\n  body1:\r\n    'Justo proin curabitur dictumst semper auctor, consequat tempor, nostra aenean neque turpis nunc. Leo. Sapien aliquet facilisi turpis, elit facilisi praesent porta metus leo. Dignissim amet dis nec ac integer inceptos erat dis Turpis sodales ad torquent. Dolor, erat convallis.Laoreet velit a fames commodo tristique hendrerit sociosqu rhoncus vel sapien penatibus facilisis faucibus ad. Mus purus vehicula imperdiet tempor lectus, feugiat Sapien erat viverra netus potenti mattis purus turpis. Interdum curabitur potenti tristique. Porta velit dignissim tristique ultrices primis.',\r\n  body2:\r\n    'Justo proin curabitur dictumst semper auctor, consequat tempor, nostra aenean neque turpis nunc. Leo. Sapien aliquet facilisi turpis, elit facilisi praesent porta metus leo. Dignissim amet dis nec ac integer inceptos erat dis Turpis sodales ad torquent. Dolor, erat convallis.',\r\n  caption: 'Accumsan leo pretium conubia ullamcorper.',\r\n  overline: 'Accumsan leo pretium conubia ullamcorper.',\r\n  button: 'Vivamus ultrices rutrum fames dictumst'\r\n};\r\n\r\nconst Typography = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        {Object.keys(variants).map((key, i) => (\r\n          <Fragment key={i}>\r\n            <Grid\r\n              item\r\n              sm={3}\r\n              xs={12}\r\n            >\r\n              <MuiTypography variant=\"caption\">{key}</MuiTypography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              sm={9}\r\n              xs={12}\r\n            >\r\n              <MuiTypography variant={key}>{variants[key]}</MuiTypography>\r\n            </Grid>\r\n          </Fragment>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Typography;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1050\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst UsersTable = props => {\r\n  const { className, users, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = event => {\r\n    const { users } = props;\r\n\r\n    let selectedUsers;\r\n\r\n    if (event.target.checked) {\r\n      selectedUsers = users.map(user => user.id);\r\n    } else {\r\n      selectedUsers = [];\r\n    }\r\n\r\n    setSelectedUsers(selectedUsers);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedUsers.indexOf(id);\r\n    let newSelectedUsers = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\r\n    } else if (selectedIndex === selectedUsers.length - 1) {\r\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedUsers = newSelectedUsers.concat(\r\n        selectedUsers.slice(0, selectedIndex),\r\n        selectedUsers.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedUsers(newSelectedUsers);\r\n  };\r\n\r\n  const handlePageChange = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedUsers.length === users.length}\r\n                      color=\"primary\"\r\n                      indeterminate={\r\n                        selectedUsers.length > 0 &&\r\n                        selectedUsers.length < users.length\r\n                      }\r\n                      onChange={handleSelectAll}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Email</TableCell>\r\n                  <TableCell>Location</TableCell>\r\n                  <TableCell>Phone</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {users.slice(0, rowsPerPage).map(user => (\r\n                  <TableRow\r\n                    className={classes.tableRow}\r\n                    hover\r\n                    key={user.id}\r\n                    selected={selectedUsers.indexOf(user.id) !== -1}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={selectedUsers.indexOf(user.id) !== -1}\r\n                        color=\"primary\"\r\n                        onChange={event => handleSelectOne(event, user.id)}\r\n                        value=\"true\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <div className={classes.nameContainer}>\r\n                        <Avatar\r\n                          className={classes.avatar}\r\n                          src={user.avatarUrl}\r\n                        >\r\n                          {getInitials(user.personalInfo.firstname + user.personalInfo.lastname)}\r\n                        </Avatar>\r\n                        <Typography variant=\"body1\">{user.personalInfo.firstname + \" \" + user.personalInfo.lastname}</Typography>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>{user.email}</TableCell>\r\n                    <TableCell>\r\n                      {user.personalInfo.address.street}, {user.personalInfo.address.city},{' '}\r\n                      {user.personalInfo.address.country}\r\n                    </TableCell>\r\n                    <TableCell>{user.personalInfo.phoneNum}</TableCell>\r\n                    <TableCell>\r\n                      {moment(user.createdAt).format('DD/MM/YYYY')}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={users.length}\r\n          onChangePage={handlePageChange}\r\n          onChangeRowsPerPage={handleRowsPerPageChange}\r\n          page={page}\r\n          rowsPerPage={rowsPerPage}\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n        />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUsersTable.propTypes = {\r\n  className: PropTypes.string,\r\n  users: PropTypes.array.isRequired\r\n};\r\n\r\nexport default UsersTable;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport SearchInput from 'components/SearchInput';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  row: {\r\n    height: '42px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  spacer: {\r\n    flexGrow: 1\r\n  },\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  searchInput: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst UsersToolbar = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <div className={classes.row}>\r\n        <span className={classes.spacer} />\r\n        <Button className={classes.importButton}>Import</Button>\r\n        <Button className={classes.exportButton}>Export</Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Add user\r\n        </Button>\r\n      </div>\r\n      <div className={classes.row}>\r\n        <SearchInput\r\n          className={classes.SearchInput}\r\n          placeholder=\"Search user\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUsersToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UsersToolbar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport axios from \"axios\";\r\n\r\nimport { UsersToolbar, UsersTable } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst UserList = props => {\r\n  const classes = useStyles();\r\n\r\n  const [users, setUsers] = useState([]);\r\n  if(props.location.data != undefined) {\r\n    useEffect(() => {\r\n      setUsers(props.location.data);\r\n        console.log(users);\r\n  });\r\n  }\r\n  if(props.location.data == undefined) {\r\n  useEffect(() => {\r\n\r\n    async function fillUsers() {\r\n        await axios.post(\"http://localhost:3000/users/getpatients\", {\r\n        }).then((response) => {\r\n            const data = response.data;\r\n            console.log(data);\r\n            data.forEach((userData) => {\r\n                setUsers(user => user.concat(userData))\r\n            })\r\n        }).catch((err) => {\r\n            console.log(err.response);\r\n        })\r\n    }\r\n\r\n    fillUsers();\r\n}, []);\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <UsersToolbar />\r\n      <div className={classes.content}>\r\n        <UsersTable users={users} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes, { func } from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Grid,\r\n    Button,\r\n    IconButton,\r\n    TextField,\r\n    Link,\r\n    Typography,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle\r\n} from '@material-ui/core';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { authenticate } from '../../../token';\r\nimport axios from \"axios\";\r\nimport MaterialTable from 'material-table';\r\nimport validate from 'validate.js';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100%',\r\n        paddingTop: '5px',\r\n        minWidth: '500px'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    dialogPaper: {\r\n        minHeight: '80vh',\r\n        maxHeight: '80vh',\r\n    },\r\n    content: {\r\n        alignItems: 'center',\r\n        display: 'flex'\r\n    },\r\n    title: {\r\n        fontWeight: 700\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.error.main,\r\n        height: 56,\r\n        width: 56\r\n    },\r\n    icon: {\r\n        height: 32,\r\n        width: 32\r\n    },\r\n    difference: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    differenceIcon: {\r\n        color: theme.palette.error.dark\r\n    },\r\n    differenceValue: {\r\n        color: theme.palette.error.dark,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    notchedOutline: {\r\n        borderWidth: \"1px\",\r\n        borderColor: theme.palette.primary.dark\r\n    },\r\n    grid: {\r\n        borderBottomStyle: 'solid',\r\n        borderBottom: '1px',\r\n        borderBottomColor: theme.palette.primary.main,\r\n        margin: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nconst EntryButton = props => {\r\n    const { className, ...rest } = props;\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [category, setCategory] = useState([]);\r\n    const [selectedCategory, setSelectedCategory] = useState([]);\r\n    const [responseText, setResponseText] = useState('');\r\n    const [radioValue, setRadioValue] = useState('N/A');\r\n    const [rows, setRows] = useState([]);\r\n\r\n\r\n    const [formState, setFormState] = useState({\r\n        open: false,\r\n        values: {},\r\n        touched: {},\r\n        date: new Date(),\r\n        time: new Date(),\r\n\r\n    });\r\n\r\n    const schema = {\r\n        title: {\r\n            presence: { allowEmpty: false, message: 'is required' },\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        //on page load\r\n        //console.log(filtered);\r\n\r\n        const id = authenticate();\r\n\r\n        console.log(`ID: ` + id);\r\n        setFormState(formState => ({\r\n            ...formState,\r\n            values: {\r\n                ...formState.values,\r\n                ['time']: new Date(),\r\n                ['date']: new Date()\r\n            }\r\n        }));\r\n\r\n        async function fillCategories() {\r\n            await axios.get(\"http://localhost:3000/entry/category/getQuestions\", {\r\n            }).then((response) => {\r\n                const data = response.data;\r\n                data.forEach((questionData) => {\r\n                    setCategory(category => category.concat(questionData))\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err.response);\r\n            })\r\n        }\r\n\r\n        fillCategories();\r\n    }, []);\r\n\r\n    //console.log(formState.values);\r\n    const pickTime = (time) => {\r\n        setFormState(formState => ({\r\n            ...formState,\r\n            values: {\r\n                ...formState.values,\r\n                ['time']: time\r\n            }\r\n        }));\r\n\r\n    }\r\n\r\n    const pickDate = (date) => {\r\n        setFormState(formState => ({\r\n            ...formState,\r\n            values: {\r\n                ...formState.values,\r\n                ['date']: date\r\n            }\r\n        }));\r\n    }\r\n    const handleChange = event => {\r\n        //for title and contents\r\n        const { name, value } = event.target;\r\n        //event.persist();\r\n\r\n\r\n        setFormState(formState => ({\r\n            ...formState,\r\n            values: {\r\n                ...formState.values,\r\n                [name]: value\r\n            }\r\n        }));\r\n    };\r\n\r\n    const handleClickOpen = async () => {\r\n\r\n        setFormState(formState => ({\r\n            ...formState,\r\n            open: true,\r\n            values: {\r\n                ...formState.values,\r\n                ['time']: new Date(),\r\n                ['date']: new Date(),\r\n            }\r\n        }));\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setFormState(formState => ({\r\n            ...formState,\r\n            open: false,\r\n            values: ''\r\n        }));\r\n        //closing the entry form removes all categories so it doesn't duplicate the next time it opens\r\n        setSelectedCategory([]);\r\n        setRows([]);\r\n    };\r\n\r\n    const options = category.map((option) => {\r\n        const firstLetter = option.categoryName[0].toUpperCase();\r\n        return {\r\n            firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\r\n            ...option,\r\n        };\r\n    });\r\n\r\n    const pickCategory = event => {\r\n        let text = event.target.innerText;\r\n        //console.log(text);\r\n\r\n        if (!text == undefined || !text == \"\") {\r\n\r\n\r\n            const getQuestions = category.filter(question => {\r\n                var questionReturn = question.categoryName.includes(text);\r\n                if (questionReturn) {\r\n                    //setSelectedCategory(prev => [...prev, { categoryName: text, categoryQuestions: question.questions }]);\r\n                    setRows(prevArray => [...prevArray, { categoryName: text, categoryQuestions: question.questions }]);\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n        //goes to useEffect[selectedCategory]\r\n    }\r\n\r\n    const removeRow = (index) => {\r\n        var listRows = [...rows];\r\n        var category = [...selectedCategory];\r\n        listRows.splice(index, 1);\r\n        category.splice(index, 1);\r\n        setRows(listRows);\r\n        //setCategory(category);\r\n    }\r\n\r\n    useEffect(() => {\r\n        //when radioValue is updated\r\n        console.log(rows);\r\n    }, [rows]);\r\n\r\n    useEffect(() => {\r\n        //when radioValue is updated\r\n    }, [selectedCategory]);\r\n\r\n    const pickSelection = event => {\r\n        setRadioValue(event.target.value);\r\n    }\r\n\r\n    const setResponse = (event, index1, index2, question) => {\r\n        // setResponseText((responseText => ({\r\n        //     ...responseText, response: {\r\n        //         ...responseText.response,\r\n        //         ['value']: event.target.value\r\n        //     }\r\n        // })));\r\n\r\n        // setFormState(formState => ({\r\n        //     ...formState,\r\n        //     values: {\r\n        //         ...formState.values,\r\n        //         [name]: value\r\n        //     }\r\n        // }));\r\n\r\n\r\n        //       console.log(event.target);\r\n        //debugger;\r\n        // console.log(index1);\r\n        // console.log(index2)\r\n        //console.log(question);\r\n        let newData = [...rows];\r\n        // console.log(newData);\r\n        //rows[index1].categoryQuestions[index2]\r\n        newData[index1].categoryQuestions[index2].response = event.target.value;\r\n        setRows(newData);\r\n        //setRows(prevArray => [...prevArray, { categoryName: text, categoryQuestions: question.questions }]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(responseText);\r\n\r\n        //let newData = [...rows];\r\n        //console.log(newData);\r\n        //rows[index1].categoryQuestions[index2]\r\n        //newData[index1].categoryQuestions[index2].response = responseText;\r\n        //setRows(newData);\r\n    }, [responseText]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        //when radioValue is updated\r\n\r\n    }, [radioValue]);\r\n\r\n\r\n    //validate title\r\n    useEffect(() => {\r\n        const errors = validate(formState.values, schema);\r\n\r\n        setFormState(formState => ({\r\n            ...formState,\r\n            isValid: errors ? false : true,\r\n            errors: errors || {}\r\n        }));\r\n    }, [formState.values]);\r\n\r\n\r\n    const submit = async () => {\r\n        const id = authenticate();\r\n        await axios\r\n            .post(\"http://localhost:3000/entry/add/\", {\r\n                id: id,\r\n                contents: formState.values.contents,\r\n                title: formState.values.title,\r\n                category: { selectedCategory },\r\n                date: formState.values.date.toISOString().substring(0, 10),\r\n                time: formState.values.time.toISOString().substring(11, 16),\r\n                data: rows\r\n            })\r\n            .then((response) => {\r\n                alert(response.data)\r\n\r\n                setFormState(formState => ({\r\n                    ...formState,\r\n                    values: ''\r\n                }));\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const hasError = field =>\r\n        formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n                New Entry\r\n                 </Button>\r\n\r\n            <Dialog\r\n                open={formState.open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                className={classes.root}\r\n                fullWidth={true}\r\n                maxWidth={'lg'}\r\n                scroll={'paper'}\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">New Entry</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To create an entry, please submit the contents of your entry.\r\n                        </DialogContentText>\r\n\r\n\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"title\"\r\n                                name=\"title\"\r\n                                fullWidth\r\n                                label=\"Title\"\r\n                                type=\"title\"\r\n                                onChange={handleChange}\r\n                                error={hasError('title')}\r\n                                helperText={\r\n                                    hasError('title') ? formState.errors.title[0] : null\r\n                                }\r\n                                value={formState.values.title || ''}\r\n                            />\r\n\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    variant=\"inline\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    margin=\"normal\"\r\n                                    id=\"date\"\r\n                                    name=\"date\"\r\n                                    label=\"Date\"\r\n                                    value={formState.values.date || ''}\r\n                                    onChange={pickDate}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                                <KeyboardTimePicker\r\n                                    margin=\"normal\"\r\n                                    id=\"time\"\r\n                                    label=\"Time picker\"\r\n                                    name=\"time\"\r\n                                    value={formState.values.time || ''}\r\n                                    onChange={pickTime}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change time',\r\n                                    }}\r\n                                />\r\n\r\n                            </MuiPickersUtilsProvider>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Symptoms</th>\r\n                            </tr>\r\n                            <tr></tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <Autocomplete\r\n                                        id=\"grouped-demo\"\r\n                                        options={options.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter))}\r\n                                        groupBy={(option) => option.firstLetter}\r\n                                        getOptionLabel={(option) => option.categoryName}\r\n                                        getOptionSelected={(option) => option.categoryName}\r\n                                        style={{ width: 300, paddingTop: 5 }}\r\n                                        onInputChange={pickCategory}\r\n                                        renderInput={(params) => <TextField {...params} label=\"Select a symptom\" variant=\"outlined\" />}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            {rows.map((row, index) =>\r\n                                <tr id={index} key={index}>\r\n                                    <td>{row.categoryName}</td>\r\n                                    <td>\r\n                                        <Grid\r\n                                            container\r\n                                            spacing={2}\r\n                                            className={classes.grid}\r\n                                        >\r\n                                            {row.categoryQuestions.map((question, index2) => {\r\n\r\n                                                //console.log(rows[index].categoryQuestions[index2]);\r\n                                                return [\r\n                                                    <Grid item xs={3} key={index2}  >\r\n\r\n                                                        <TextField\r\n                                                            margin=\"dense\"\r\n                                                            id={question.question}\r\n                                                            name=\"response\"\r\n                                                            multiline\r\n                                                            label={question.question}\r\n                                                            type=\"contents\"\r\n                                                            rows={6}\r\n                                                            onChange={() => setResponse(event, index, index2, { question })}\r\n                                                            value={rows[index].categoryQuestions[index2].response || ''}\r\n                                                            color=\"primary\"\r\n                                                            InputProps={{ disableUnderline: true }}\r\n                                                            variant=\"standard\"\r\n                                                        //onChange={handleChange}\r\n                                                        //value={formState.values.response || ''}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                ]\r\n                                            })}\r\n                                        </Grid>\r\n                                    </td>\r\n                                    <td><Button onClick={() => removeRow(index)} color=\"primary\" row={index}> Remove </Button> </td>\r\n                                </tr>)}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    {/* {questions || null} */}\r\n\r\n\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"contents\"\r\n                        name=\"contents\"\r\n                        multiline\r\n                        label=\"Contents\"\r\n                        type=\"contents\"\r\n                        fullWidth\r\n                        rows={10}\r\n                        onChange={handleChange}\r\n                        value={formState.values.contents || ''}\r\n                    />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button\r\n                        onClick={() => { handleClose(); submit(); }}\r\n                        color=\"primary\"\r\n                        disabled={!formState.isValid}\r\n                    >\r\n                        Submit\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div >\r\n\r\n    )\r\n};\r\n\r\nEntryButton.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\n\r\nexport default EntryButton;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Paper, Input } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport axios from \"axios\";\r\nimport { authenticate } from '../../views/token';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    borderRadius: '4px',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1),\r\n    display: 'flex',\r\n    flexBasis: 420\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  input: {\r\n    flexGrow: 1,\r\n    fontSize: '14px',\r\n    lineHeight: '16px',\r\n    letterSpacing: '-0.05px'\r\n  }\r\n}));\r\n\r\nconst SearchInputEntries = props => {\r\n  const { className, onChange, style, ...rest } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = authenticate();\r\n  const handleKeyDown = (event) => {\r\n    if(event.key === 'Enter') {\r\n      const title = event.target.value;\r\n      searchEntries(title);\r\n    }\r\n  \r\n  async function searchEntries(title) {\r\n    console.log(title);\r\n    await axios.post(\"http://localhost:3000/entry/searchentries\", {\r\n      title: title,\r\n      patient: id\r\n    }).then((response) => {\r\n        const data = response.data;\r\n        console.log(data[0]);\r\n        history.push({pathname:'/entry', data:data});\r\n    }).catch((err) => {\r\n        console.log(err);\r\n    })\r\n}\r\n};\r\n\r\n  return (\r\n    <Paper\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      style={style}\r\n    >\r\n      <SearchIcon className={classes.icon} />\r\n      <Input\r\n        {...rest}\r\n        className={classes.input}\r\n        disableUnderline\r\n        onKeyUp={handleKeyDown}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nSearchInputEntries.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object,\r\n  history: PropTypes.object,\r\n};\r\n\r\nexport default SearchInputEntries;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport EntryButton from '../EntryButton';\r\n\r\n\r\nimport SearchInputEntries from 'components/SearchInputEntries/SearchInputEntries';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  row: {\r\n    height: '42px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  spacer: {\r\n    flexGrow: 1\r\n  },\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  searchInput: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst EntryToolbar = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <div className={classes.row}>\r\n        <span className={classes.spacer} />\r\n        <EntryButton />\r\n      </div>\r\n      <div className={classes.row}>\r\n        <SearchInputEntries\r\n          className={classes.searchInput}\r\n          placeholder=\"Search entry\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nEntryToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default EntryToolbar;\r\n","import React from 'react';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    }\r\n}));\r\n\r\nconst PDFButton = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    {/*\r\nSOURCE: https://stackoverflow.com/a/45017234\r\n*/}\r\n    const print = () => {\r\n        const input = document.getElementById('print');\r\n        html2canvas(input).then(canvas => {\r\n            document.body.appendChild(canvas);  // if you want see your screenshot in body.\r\n            const imgData = canvas.toDataURL('image/png');\r\n            const pdf = new jsPDF();\r\n            pdf.addImage(imgData, 'PNG', 0, 0);\r\n            pdf.save(\"download.pdf\");\r\n        })\r\n    }\r\n    return (\r\n        <Button\r\n            color=\"primary\"\r\n            onClick={print}\r\n            variant=\"outlined\"\r\n            className={classes.button}\r\n        >\r\n            Print\r\n        </Button>\r\n    )\r\n\r\n};\r\n\r\nexport default PDFButton;","import React, { useEffect, useState, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport PDFButton from '../PDFButton';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    Divider,\r\n    Grid,\r\n    Button,\r\n    IconButton,\r\n    TextField,\r\n    Link,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody\r\n} from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100%',\r\n        paddingLeft: '5px',\r\n        width: '75%'\r\n    },\r\n    row: {\r\n        height: '42px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    spacer: {\r\n        flexGrow: 1\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    list: {\r\n        width: '100%',\r\n        maxWidth: '36ch',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    card: {\r\n        minWidth: 275,\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    indent: {\r\n        marginBottom: 12,\r\n        paddingLeft: 5\r\n    }\r\n}));\r\n\r\nconst EntriesExport = React.forwardRef((props, ref) => {\r\n    const { selectedEntries } = props;\r\n    const [results, setResults] = React.useState([]);\r\n    const classes = useStyles();\r\n\r\n    //for dialog \r\n    const [formState, setFormState] = useState({\r\n        open: false,\r\n        values: {},\r\n    });\r\n\r\n    //to close or when you click away from the generated export\r\n    const handleClose = () => {\r\n        setFormState(formState => ({\r\n            ...formState,\r\n            open: false,\r\n            values: ''\r\n        }));\r\n        //removes results so its clear for next time\r\n        console.log(formState.open);\r\n        setResults([]);\r\n    };\r\n\r\n\r\n\r\n\r\n    const exportData = async () => {\r\n        console.log(selectedEntries);\r\n        //make a request to the backend to get entry data using list of id's\r\n        await axios\r\n            .post(\"http://localhost:3000/entry/getentrylist/\", {\r\n                selectedEntries: selectedEntries\r\n            })\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    setResults(response.data);\r\n                    //set [results] to the entry data\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        //when results get filled, open the generated report window\r\n        if (results.length > 0) {\r\n            setFormState(formState => ({\r\n                ...formState,\r\n                open: true,\r\n                values: {\r\n                    ...formState.values,\r\n                }\r\n            }));\r\n        }\r\n\r\n    }, [results])\r\n\r\n\r\n    let categoryQuestion = [];\r\n    return (\r\n        <div>\r\n            <Button\r\n                color=\"primary\"\r\n                onClick={exportData}\r\n                variant=\"outlined\"\r\n                className={classes.button}\r\n                disabled={selectedEntries.length < 1}\r\n            //need at least 1 entry to be able to export\r\n            >\r\n                Export\r\n        </Button>\r\n\r\n            <Dialog\r\n                open={formState.open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                fullWidth={false}\r\n                maxWidth={'md'}\r\n            >\r\n\r\n                <Grid container spacing={1} id=\"print\">\r\n                    <Grid item xs={12}>\r\n                        <DialogTitle id=\"form-dialog-title\">Generated export</DialogTitle>\r\n                    </Grid>\r\n                    {/*\r\n                    look thruogh all entries\r\n                    */}\r\n                    {results.map((result) => {\r\n                        categoryQuestion = [];\r\n                        return (\r\n                            <React.Fragment key={result._id}>\r\n                                <Grid item xs={6}>\r\n                                    {result.category.map((answer) => {\r\n                                        {/*\r\n                    look thruogh all entry symptoms, their questions and answers\r\n                    */}\r\n                                        categoryQuestion.push(\r\n                                            <Fragment key={answer}>\r\n                                                <Typography className={classes.pos} component=\"p\">Symptom: {answer.categoryName} </Typography>\r\n                                            </Fragment>\r\n                                        );\r\n                                        answer.categoryQuestions.map((question, index) => {\r\n                                            categoryQuestion.push(\r\n                                                <Fragment key={question[0]._id}>\r\n                                                    <Typography className={classes.indent} component=\"p\"><b>{question[0].question}</b>: {question[0].response} </Typography>\r\n                                                </Fragment>\r\n                                            )\r\n                                        })\r\n                                    })}\r\n\r\n                                    <Card className={classes.root} variant=\"outlined\">\r\n                                        <CardContent key={result._id}>\r\n                                            <Typography className={classes.title} color=\"primary\" gutterBottom>{result.title} </Typography>\r\n                                            <Typography className={classes.pos} component=\"p\">Created: {result.createdAt.substr(0, 10)} </Typography>\r\n                                            <Typography className={classes.pos} component=\"p\">Date: {result.dateOfEntry.substr(0, 10)} </Typography>\r\n                                            <Typography className={classes.pos} component=\"p\">Time: {result.timeOfEntry} </Typography>\r\n                                            <Typography className={classes.pos} component=\"p\">Contents: {result.contents} </Typography>\r\n\r\n                                            {/*\r\n                    entry symptom + question + response data\r\n                    */}\r\n                                            {categoryQuestion}\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </Grid>\r\n                            </React.Fragment>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n                <PDFButton />\r\n            </Dialog>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\nEntriesExport.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default EntriesExport;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { authenticate } from '../../../token';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport {\r\n  Card,\r\n  Button,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination\r\n} from '@material-ui/core';\r\nimport axios from \"axios\";\r\nimport {history}from 'history';\r\nimport EntriesExport from '../EntriesExport'\r\nimport { getInitials } from 'helpers';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1050\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  },\r\n  row: {\r\n    height: '42px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  spacer: {\r\n    flexGrow: 1\r\n  },\r\n\r\n}));\r\n\r\nconst EntriesTable = props => {\r\n  const { className, history, entries, ...rest } = props;\r\n\r\n  console.log(entries)\r\n  const classes = useStyles();\r\n\r\n  const [selectedEntries, setselectedEntries] = useState([]);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = event => {\r\n    const { entries } = props;\r\n\r\n    let selectedEntries;\r\n\r\n    if (event.target.checked) {\r\n      selectedEntries = entries.map(entry => entry._id);\r\n    } else {\r\n      selectedEntries = [];\r\n    }\r\n\r\n    setselectedEntries(selectedEntries);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    console.log(event.target);\r\n    const selectedIndex = selectedEntries.indexOf(id);\r\n    let newselectedEntries = [];\r\n    if (selectedIndex === -1) {\r\n      newselectedEntries = newselectedEntries.concat(selectedEntries, id);\r\n    } else if (selectedIndex === 0) {\r\n      newselectedEntries = newselectedEntries.concat(selectedEntries.slice(1));\r\n    } else if (selectedIndex === selectedEntries.length - 1) {\r\n      newselectedEntries = newselectedEntries.concat(selectedEntries.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newselectedEntries = newselectedEntries.concat(\r\n        selectedEntries.slice(0, selectedIndex),\r\n        selectedEntries.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setselectedEntries(newselectedEntries);\r\n  };\r\n\r\n  const handlePageChange = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  //Remove a single entry \r\n   const handleRemove = async (event, title) =>\r\n  {\r\n    event.preventDefault();\r\n    window.location.reload(false);\r\n       await axios\r\n          .post(\"http://localhost:3000/entry/delete\", {\r\n              title: title,\r\n          })\r\n          .then((response) => {\r\n              setFormState(formState => ({\r\n                  ...formState,\r\n                  values: ''\r\n              }));\r\n          })\r\n          .catch((error) => {\r\n              console.log(\"Failed to delete\");\r\n          });\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <div className={classes.row}>\r\n              <span className={classes.spacer} />\r\n              <Button className={classes.button} color=\"primary\" variant=\"outlined\">Import</Button>\r\n              {          /*\r\n            sends selected entries to the export button\r\n          */}\r\n              {<EntriesExport selectedEntries={selectedEntries} />}\r\n            </div>\r\n\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedEntries.length === entries.length}\r\n                      color=\"primary\"\r\n                      indeterminate={\r\n                        selectedEntries.length > 0 &&\r\n                        selectedEntries.length < entries.length\r\n                      }\r\n                      onChange={handleSelectAll}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>Title</TableCell>\r\n                  <TableCell>Category</TableCell>\r\n                  <TableCell>Questions</TableCell>\r\n                  <TableCell>Contents</TableCell>\r\n                  <TableCell>Date Created</TableCell>\r\n                  <TableCell>Edit</TableCell>\r\n                  <TableCell>Delete</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {entries.slice(0, rowsPerPage).map(entry => (\r\n                  <TableRow\r\n                    className={classes.tableRow}\r\n                    hover\r\n                    key={entry._id}\r\n                    selected={selectedEntries.indexOf(entry._id) !== -1}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={selectedEntries.indexOf(entry._id) !== -1}\r\n                        color=\"primary\"\r\n                        onChange={event => handleSelectOne(event, entry._id)}\r\n                        value=\"true\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <div className={classes.nameContainer}>\r\n\r\n                        <Typography variant=\"body1\">{entry.title}</Typography>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {entry.category.map(category => (\r\n                        <div>\r\n                          {category.categoryName}\r\n                        </div>\r\n                      ))}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {entry.category.map(category => (\r\n\r\n                        category.categoryQuestions.map(question => (\r\n\r\n                          <div><b>{question[0].question}</b>: {question[0].response}</div>\r\n                        ))\r\n\r\n                      ))}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {entry.contents}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {moment(entry.createdAt).format('DD/MM/YYYY')}\r\n                    </TableCell>\r\n\r\n                    <TableCell>\r\n                    <IconButton aria-label=\"edit\" color=\"primary\">\r\n                        <EditIcon />\r\n                    </IconButton> \r\n                    </TableCell>\r\n                    \r\n                    <TableCell>\r\n                    <IconButton onClick={() => handleRemove(event, entry.title)} aria-label=\"delete\" color=\"action\">\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                    </TableCell>\r\n                    \r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={entries.length}\r\n          onChangePage={handlePageChange}\r\n          onChangeRowsPerPage={handleRowsPerPageChange}\r\n          page={page}\r\n          rowsPerPage={rowsPerPage}\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n        />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nEntriesTable.propTypes = {\r\n  className: PropTypes.string,\r\n  entries: PropTypes.array.isRequired,\r\n  history: PropTypes.object\r\n};\r\n\r\n\r\n\r\nexport default withRouter(EntriesTable);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { IconButton, Grid, Typography } from '@material-ui/core';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport axios from \"axios\";\r\nimport { EntryToolbar } from './components';\r\nimport EntriesTable from './components/EntriesTable/EntriesTable';\r\nimport { authenticate } from '../../views/token';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(3)\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    pagination: {\r\n        marginTop: theme.spacing(3),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end'\r\n    }\r\n}));\r\n\r\nconst EntryList = props => {\r\n    const classes = useStyles();\r\n    const id = authenticate();\r\n    const [entries, setEntries] = useState([]);\r\n\r\n    if(props.location.data != undefined) {\r\n        useEffect(() => {\r\n            setEntries(props.location.data);\r\n            console.log(entries);\r\n      });\r\n      }\r\n      if(props.location.data == undefined) {\r\n      useEffect(() => {\r\n        console.log(\"on load\");\r\n        console.log(id);\r\n        async function fillEntries() { \r\n            await axios.post(\"http://localhost:3000/entry/\", { patient: id\r\n            }).then((response) => {\r\n                const data = response.data;\r\n                console.log(data);\r\n                data.forEach((entryData) => {\r\n                    setEntries(entry => entry.concat(entryData))\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err.response);\r\n            })\r\n        }\r\n    \r\n        fillEntries();\r\n    }, []);\r\n      }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <EntryToolbar />\r\n            <div className={classes.content}>\r\n                <EntriesTable entries={entries}/>\r\n            </div>\r\n            <div className={classes.pagination}>\r\n                <Typography variant=\"caption\">1-6 of 20</Typography>\r\n                <IconButton>\r\n                    <ChevronLeftIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <ChevronRightIcon />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EntryList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: '100%'\r\n  },\r\n  grid: {\r\n    height: '100%'\r\n  },\r\n  quoteContainer: {\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  quote: {\r\n    backgroundColor: theme.palette.neutral,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: 'url(/images/auth.jpg)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  },\r\n  quoteInner: {\r\n    textAlign: 'center',\r\n    flexBasis: '600px'\r\n  },\r\n  quoteText: {\r\n    color: theme.palette.white,\r\n    fontWeight: 300\r\n  },\r\n  comfText:{\r\n    color: theme.palette.green,\r\n    fontWeight: 200,\r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.white\r\n  },\r\n  bio: {\r\n    color: theme.palette.white\r\n  },\r\n  contentContainer: {},\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  logoImage: {\r\n    marginLeft: theme.spacing(4)\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n}));\r\n\r\nconst SentEmail = props => {\r\n  const { history } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        className={classes.grid}\r\n        container\r\n      >\r\n        <Grid\r\n          className={classes.quoteContainer}\r\n          item\r\n          lg={5}\r\n        >\r\n          <div className={classes.quote}>\r\n            <div className={classes.quoteInner}>\r\n              <Typography\r\n                className={classes.quoteText}\r\n                variant=\"h1\"\r\n              >\r\n                Join Us\r\n              </Typography>\r\n              <div className={classes.person}>\r\n                <Typography\r\n                  className={classes.name}\r\n                  variant=\"body1\"\r\n                >\r\n                  Take Control Of Your Health\r\n                </Typography>\r\n                <Typography\r\n                  className={classes.bio}\r\n                  variant=\"body2\"\r\n                >\r\n                  3ELM\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.content}\r\n          item\r\n          lg={7}\r\n          xs={12}\r\n        >\r\n          <div className={classes.content}>\r\n            <div className={classes.contentHeader}>\r\n            </div>\r\n            <div className={classes.contentBody}>\r\n                <Typography\r\n                    className={classes.comfText}\r\n                    variant=\"h3\"\r\n                >\r\n                    Please check your email for a confirmation link.\r\n                </Typography>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nSentEmail.propTypes = {\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(SentEmail);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport validate from 'validate.js';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  FormHelperText,\r\n  Checkbox,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport axios from 'axios';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: '100%'\r\n  },\r\n  grid: {\r\n    height: '100%'\r\n  },\r\n  quoteContainer: {\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  quote: {\r\n    backgroundColor: theme.palette.neutral,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: 'url(/images/auth.jpg)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  },\r\n  quoteInner: {\r\n    textAlign: 'center',\r\n    flexBasis: '600px'\r\n  },\r\n  quoteText: {\r\n    color: theme.palette.white,\r\n    fontWeight: 300\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.white\r\n  },\r\n  bio: {\r\n    color: theme.palette.white\r\n  },\r\n  contentContainer: {},\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  logoImage: {\r\n    marginLeft: theme.spacing(4)\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  select:{\r\n    marginTop: theme.spacing(2),\r\n    width: \"70%\",\r\n  },\r\n  policy: {\r\n    marginTop: theme.spacing(1),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  policyCheckbox: {\r\n    marginLeft: '-14px'\r\n  },\r\n  signUpButton: {\r\n    width: \"70%\",\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nconst SelectSignUp = props => {\r\n  const { history } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  const [choice, setChoice] = React.useState('');\r\n\r\n  const handleChanges = (event) => {\r\n    setChoice(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const errors = validate(formState.values);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleSignUp = event => {\r\n    event.preventDefault();\r\n    debugger;\r\n    if(choice == 1){\r\n        history.push(\"/sign-up-patient\");\r\n    }else if(choice == 2){\r\n        history.push(\"/sign-up-med\");\r\n    }else{\r\n        console.log(\"error\");\r\n    }\r\n  };\r\n\r\n  const hasError = field =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        className={classes.grid}\r\n        container\r\n      >\r\n        <Grid\r\n          className={classes.quoteContainer}\r\n          item\r\n          lg={5}\r\n        >\r\n          <div className={classes.quote}>\r\n            <div className={classes.quoteInner}>\r\n              <Typography\r\n                className={classes.quoteText}\r\n                variant=\"h1\"\r\n              >\r\n                Join Us\r\n              </Typography>\r\n              <div className={classes.person}>\r\n                <Typography\r\n                  className={classes.name}\r\n                  variant=\"body1\"\r\n                >\r\n                  Take Control Of Your Health\r\n                </Typography>\r\n                <Typography\r\n                  className={classes.bio}\r\n                  variant=\"body2\"\r\n                >\r\n                  3ELM\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.content}\r\n          item\r\n          lg={7}\r\n          xs={12}\r\n        >\r\n          <div className={classes.content}>\r\n            <div className={classes.contentHeader}>\r\n              <IconButton onClick={handleBack}>\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.contentBody}>\r\n              <form\r\n                className={classes.form}\r\n                onSubmit={handleSignUp}\r\n              >\r\n                <InputLabel id=\"select_signup\">\r\n                    Select Account Type\r\n                </InputLabel>\r\n                  <Select\r\n                    className={classes.select}\r\n                    fullWidth\r\n                    labelId=\"Select Account Type\"\r\n                    id=\"select_signup\"\r\n                    value={formState.values.select_signup}\r\n                    onChange={handleChanges}\r\n                    >\r\n                    <MenuItem value={1}>Patient</MenuItem>\r\n                    <MenuItem value={2}>Medical</MenuItem>\r\n                </Select>\r\n                <Button\r\n                  className={classes.signUpButton}\r\n                  color=\"primary\"\r\n                  disabled={!formState.isValid}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Next\r\n                </Button>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?{' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/sign-in\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign In\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectSignUp.propTypes = {\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(SelectSignUp);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport validate from 'validate.js';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  FormHelperText,\r\n  Checkbox,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport axios from 'axios';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst schema = {\r\n  userName: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 32\r\n    }\r\n  },\r\n  firstName: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 32\r\n    }\r\n  },\r\n  lastName: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 32\r\n    }\r\n  },\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true,\r\n    length: {\r\n      maximum: 64\r\n    }\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 128\r\n    }\r\n  },\r\n  phoneNum: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 10\r\n    },\r\n    format: {\r\n      pattern: \"^[0-9]{10}$\",\r\n      message: \"\"\r\n    }\r\n  },\r\n  policy: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    checked: true\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: '100%'\r\n  },\r\n  grid: {\r\n    height: '100%'\r\n  },\r\n  quoteContainer: {\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  quote: {\r\n    backgroundColor: theme.palette.neutral,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: 'url(/images/auth.jpg)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  },\r\n  quoteInner: {\r\n    textAlign: 'center',\r\n    flexBasis: '600px'\r\n  },\r\n  quoteText: {\r\n    color: theme.palette.white,\r\n    fontWeight: 300\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.white\r\n  },\r\n  bio: {\r\n    color: theme.palette.white\r\n  },\r\n  contentContainer: {},\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  logoImage: {\r\n    marginLeft: theme.spacing(4)\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  policy: {\r\n    marginTop: theme.spacing(1),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  policyCheckbox: {\r\n    marginLeft: '-14px'\r\n  },\r\n  signUpButton: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nconst SignUp = props => {\r\n  const { history } = props;\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === 'checkbox'\r\n            ? event.target.checked\r\n            : event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleSignUp = event => {\r\n    event.preventDefault();\r\n\r\n    axios\r\n      .post(\"http://localhost:3000/users/add/patient\", {\r\n        firstname: formState.values.firstName,\r\n        lastname: formState.values.lastName,\r\n        username: formState.values.userName,\r\n        email: formState.values.email,\r\n        phoneNum: formState.values.phoneNum,\r\n        password: formState.values.password,\r\n      })\r\n      .then((response) => {\r\n        handleClick();\r\n        //history.push(\"/email-sent\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const hasError = field =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        className={classes.grid}\r\n        container\r\n      >\r\n        <Grid\r\n          className={classes.quoteContainer}\r\n          item\r\n          lg={5}\r\n        >\r\n          <div className={classes.quote}>\r\n            <div className={classes.quoteInner}>\r\n              <Typography\r\n                className={classes.quoteText}\r\n                variant=\"h1\"\r\n              >\r\n                Join Us\r\n              </Typography>\r\n              <div className={classes.person}>\r\n                <Typography\r\n                  className={classes.name}\r\n                  variant=\"body1\"\r\n                >\r\n                  Take Control Of Your Health\r\n                </Typography>\r\n                <Typography\r\n                  className={classes.bio}\r\n                  variant=\"body2\"\r\n                >\r\n                  3ELM\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.content}\r\n          item\r\n          lg={7}\r\n          xs={12}\r\n        >\r\n          <div className={classes.content}>\r\n            <div className={classes.contentHeader}>\r\n              <IconButton onClick={handleBack}>\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.contentBody}>\r\n              <form\r\n                className={classes.form}\r\n                onSubmit={handleSignUp}\r\n              >\r\n                <Typography\r\n                  className={classes.title}\r\n                  variant=\"h2\"\r\n                >\r\n                  Create new account\r\n                </Typography>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Use your email to create new account\r\n                </Typography>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('userName')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('userName') ? formState.errors.userName[0] : null\r\n                  }\r\n                  label=\"Username\"\r\n                  name=\"userName\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.userName || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('firstName')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('firstName') ? formState.errors.firstName[0] : null\r\n                  }\r\n                  label=\"First name\"\r\n                  name=\"firstName\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.firstName || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('lastName')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('lastName') ? formState.errors.lastName[0] : null\r\n                  }\r\n                  label=\"Last name\"\r\n                  name=\"lastName\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.lastName || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('email')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('email') ? formState.errors.email[0] : null\r\n                  }\r\n                  label=\"Email address\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.email || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('password')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('password') ? formState.errors.password[0] : null\r\n                  }\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={formState.values.password || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('phoneNum')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('phoneNum') ? formState.errors.phoneNum[0] : null\r\n                  }\r\n                  label=\"Phone Number\"\r\n                  name=\"phoneNum\"\r\n                  onChange={handleChange}\r\n                  type=\"phoneNum\"\r\n                  value={formState.values.phoneNum || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <div className={classes.policy}>\r\n                  <Checkbox\r\n                    checked={formState.values.policy || false}\r\n                    className={classes.policyCheckbox}\r\n                    color=\"primary\"\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    className={classes.policyText}\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    I have read the{' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </div>\r\n                {hasError('policy') && (\r\n                  <FormHelperText error>\r\n                    {formState.errors.policy[0]}\r\n                  </FormHelperText>\r\n                )}\r\n                <Button\r\n                  className={classes.signUpButton}\r\n                  color=\"primary\"\r\n                  disabled={!formState.isValid}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Sign up now\r\n                </Button>\r\n                <Snackbar\r\n                  open={open}\r\n                  autoHideDuration={6000}\r\n                  onClose={handleClose}>\r\n                  <Alert onClose={handleClose} severity=\"success\">\r\n                    A confirmation email has been sent!\r\n                  </Alert>\r\n                </Snackbar>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?{' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/sign-in\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignUp.propTypes = {\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(SignUp);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport validate from 'validate.js';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport axios from 'axios';\r\nimport { saveToken, tokenDetails } from '../token';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Facebook as FacebookIcon, Google as GoogleIcon } from 'icons';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst schema = {\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true,\r\n    length: {\r\n      maximum: 64\r\n    }\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: '100%'\r\n  },\r\n  grid: {\r\n    height: '100%'\r\n  },\r\n  quoteContainer: {\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  quote: {\r\n    backgroundColor: theme.palette.neutral,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: 'url(/images/auth.jpg)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  },\r\n  quoteInner: {\r\n    textAlign: 'center',\r\n    flexBasis: '600px'\r\n  },\r\n  quoteText: {\r\n    color: theme.palette.white,\r\n    fontWeight: 300\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.white\r\n  },\r\n  bio: {\r\n    color: theme.palette.white\r\n  },\r\n  contentContainer: {},\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  logoImage: {\r\n    marginLeft: theme.spacing(4)\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  socialButtons: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  socialIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  sugestion: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  signInButton: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nconst Forgot = props => {\r\n  const { history } = props;\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n    error: false,\r\n    success: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === 'checkbox'\r\n            ? event.target.checked\r\n            : event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSignIn = async event => {\r\n    event.preventDefault();\r\n    await axios.post(\"http://localhost:3000/login/forgot\", {\r\n      email: formState.values.email,\r\n    })\r\n      .then((response) => {\r\n        setFormState(formState => ({\r\n          ...formState,\r\n          success: true,\r\n          error: false\r\n        }));\r\n        handleClick();\r\n      })\r\n      .catch((error) => {\r\n        setFormState(formState => ({\r\n          ...formState,\r\n          success: false,\r\n          error: true\r\n        }));\r\n        handleClick();\r\n      });\r\n  };\r\n\r\n  const hasError = field =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid className={classes.grid} container>\r\n        <Grid className={classes.quoteContainer} item lg={5}>\r\n          <div className={classes.quote}>\r\n            <div className={classes.quoteInner}>\r\n              <Typography className={classes.quoteText} variant=\"h1\">\r\n                PROJECT CLEAR\r\n              </Typography>\r\n              <div className={classes.person}>\r\n                <Typography className={classes.name} variant=\"body1\">\r\n                  3ELM Consulting\r\n                </Typography>\r\n                <Typography className={classes.bio} variant=\"body2\">\r\n                  Southern Alberta Institute of Technology\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid className={classes.content} item lg={7} xs={12}>\r\n          <div className={classes.content}>\r\n            <div className={classes.contentHeader}>\r\n              <IconButton onClick={handleBack}>\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.contentBody}>\r\n              <form className={classes.form} onSubmit={handleSignIn}>\r\n                <Typography className={classes.title} variant=\"h2\">\r\n                  Forgot Password\r\n                </Typography>\r\n                <Typography\r\n                  align=\"center\"\r\n                  className={classes.sugestion}\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\">\r\n                  Please enter you email address!\r\n                </Typography>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('email')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('email') ? formState.errors.email[0] : null\r\n                  }\r\n                  label=\"Email address\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.email || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Button\r\n                  className={classes.signInButton}\r\n                  color=\"primary\"\r\n                  disabled={!formState.isValid}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Send Reset Link\r\n                </Button>\r\n                <Snackbar\r\n                  open={open}\r\n                  autoHideDuration={6000}\r\n                  onClose={handleClose}>\r\n                  {formState.error ? (\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                      Error\r\n                    </Alert>\r\n                  ) : formState.success ? (\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                      Recovery Email Sent if it exists!\r\n                    </Alert>\r\n                  ) : null}\r\n                </Snackbar>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?{' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/sign-in\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nForgot.propTypes = {\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(Forgot);","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport validate from 'validate.js';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport axios from 'axios';\r\nimport { saveToken, tokenDetails } from '../token';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Facebook as FacebookIcon, Google as GoogleIcon } from 'icons';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst schema = {\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 128\r\n    }\r\n  },\r\n\r\n  password2: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    equality: \"password\",\r\n    length: {\r\n      maximum: 128\r\n    }\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: '100%'\r\n  },\r\n  grid: {\r\n    height: '100%'\r\n  },\r\n  quoteContainer: {\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  quote: {\r\n    backgroundColor: theme.palette.neutral,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: 'url(/images/auth.jpg)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  },\r\n  quoteInner: {\r\n    textAlign: 'center',\r\n    flexBasis: '600px'\r\n  },\r\n  quoteText: {\r\n    color: theme.palette.white,\r\n    fontWeight: 300\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.white\r\n  },\r\n  bio: {\r\n    color: theme.palette.white\r\n  },\r\n  contentContainer: {},\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  logoImage: {\r\n    marginLeft: theme.spacing(4)\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  socialButtons: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  socialIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  sugestion: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  signInButton: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nconst Reset = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n    error: false,\r\n    success: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === 'checkbox'\r\n            ? event.target.checked\r\n            : event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  function initialize() {\r\n\t\taxios.get(`http://localhost:3000/login/forgot/token/${props.match.params.token}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(`response: ` + response);\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tconsole.log(`error: ` + error.response.status);\r\n\t\t\t\tif (error.response.status === 400) {\r\n\t\t\t\t\thistory.push('/sign-in');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n  useEffect(() => {\r\n    initialize();\r\n  }, []);\r\n\r\n  const handleReset = async event => {\r\n    event.preventDefault();\r\n    await axios.post(`http://localhost:3000/login/forgot/${props.match.params.token}`, {\r\n\t\t\t\ttoken: props.match.params.token,\r\n\t\t\t\tpassword: formState.values.password\r\n\t\t\t})\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tif (response.status === 200) {\r\n            this.state.tokenValidated = true;\r\n            setFormState(formState => ({\r\n              ...formState,\r\n              success: true,\r\n              error: false\r\n            }));\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n          setFormState(formState => ({\r\n            ...formState,\r\n            success: false,\r\n            error: true\r\n          }));\r\n\t\t\t\t});\r\n    handleClick();\r\n  };\r\n\r\n  const hasError = field =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid className={classes.grid} container>\r\n        <Grid className={classes.quoteContainer} item lg={5}>\r\n          <div className={classes.quote}>\r\n            <div className={classes.quoteInner}>\r\n              <Typography className={classes.quoteText} variant=\"h1\">\r\n                PROJECT CLEAR\r\n              </Typography>\r\n              <div className={classes.person}>\r\n                <Typography className={classes.name} variant=\"body1\">\r\n                  3ELM Consulting\r\n                </Typography>\r\n                <Typography className={classes.bio} variant=\"body2\">\r\n                  Southern Alberta Institute of Technology\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid className={classes.content} item lg={7} xs={12}>\r\n          <div className={classes.content}>\r\n            <div className={classes.contentHeader}>\r\n              <IconButton onClick={handleBack}>\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.contentBody}>\r\n              <form className={classes.form} onSubmit={handleReset}>\r\n                <Typography className={classes.title} variant=\"h2\">\r\n                  New Password\r\n                </Typography>\r\n                <Typography\r\n                  align=\"center\"\r\n                  className={classes.sugestion}\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\">\r\n                  Reset Password\r\n                </Typography>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('password')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('password') ? formState.errors.password[0] : null\r\n                  }\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={formState.values.password || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('password2')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('password2') ? formState.errors.password2[0] : null\r\n                  }\r\n                  label=\"Confirm Password\"\r\n                  name=\"password2\"\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={formState.values.password2 || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Button\r\n                  className={classes.signInButton}\r\n                  color=\"primary\"\r\n                  disabled={!formState.isValid}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Reset\r\n                </Button>\r\n                <Snackbar\r\n                  open={open}\r\n                  autoHideDuration={6000}\r\n                  onClose={handleClose}>\r\n                  {formState.error ? (\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                      Unable to change password\r\n                    </Alert>\r\n                  ) : formState.success ? (\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                      Password Reset!\r\n                    </Alert>\r\n                  ) : null}\r\n                </Snackbar>\r\n                <Typography color=\"textSecondary\" variant=\"body1\">\r\n                  Return to login page {' '}\r\n                  <Link component={RouterLink} to=\"/sign-in\" variant=\"h6\">\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nReset.propTypes = {\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(Reset);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n    Grid,\r\n    Link,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.default,\r\n        height: '100%'\r\n    },\r\n    grid: {\r\n        height: '100%'\r\n    },\r\n    quoteContainer: {\r\n        [theme.breakpoints.down('md')]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    quote: {\r\n        backgroundColor: theme.palette.neutral,\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundImage: 'url(/images/auth.jpg)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center'\r\n    },\r\n    quoteInner: {\r\n        textAlign: 'center',\r\n        flexBasis: '600px'\r\n    },\r\n    quoteText: {\r\n        color: theme.palette.white,\r\n        fontWeight: 300\r\n    },\r\n    comfText: {\r\n        color: theme.palette.green,\r\n        fontWeight: 200,\r\n        paddingLeft: theme.spacing(2),\r\n    },\r\n    name: {\r\n        marginTop: theme.spacing(3),\r\n        color: theme.palette.white\r\n    },\r\n    bio: {\r\n        color: theme.palette.white\r\n    },\r\n    contentContainer: {},\r\n    content: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    contentHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingTop: theme.spacing(5),\r\n        paddingBototm: theme.spacing(2),\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    logoImage: {\r\n        marginLeft: theme.spacing(4)\r\n    },\r\n    contentBody: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('md')]: {\r\n            justifyContent: 'center'\r\n        }\r\n    },\r\n}));\r\n\r\nconst Verified = props => {\r\n    var token = props.match.params.token;\r\n\r\n    axios\r\n        .post(\"http://localhost:3000/users/activate\", {\r\n            token\r\n        })\r\n        .then((response) => {\r\n            console.log('Verified');\r\n\r\n        })\r\n        .catch((error) => {\r\n            console.log('why am i doing this project')\r\n        });\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid\r\n                className={classes.grid}\r\n                container\r\n            >\r\n                <Grid\r\n                    className={classes.quoteContainer}\r\n                    item\r\n                    lg={5}\r\n                >\r\n                    <div className={classes.quote}>\r\n                        <div className={classes.quoteInner}>\r\n                            <Typography\r\n                                className={classes.quoteText}\r\n                                variant=\"h1\"\r\n                            >\r\n                                Join Us\r\n              </Typography>\r\n                            <div className={classes.person}>\r\n                                <Typography\r\n                                    className={classes.name}\r\n                                    variant=\"body1\"\r\n                                >\r\n                                    Take Control Of Your Health\r\n                </Typography>\r\n                                <Typography\r\n                                    className={classes.bio}\r\n                                    variant=\"body2\"\r\n                                >\r\n                                    3ELM\r\n                </Typography>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid\r\n                    className={classes.content}\r\n                    item\r\n                    lg={7}\r\n                    xs={12}\r\n                >\r\n                    <div className={classes.content}>\r\n                        <div className={classes.contentHeader}>\r\n                        </div>\r\n                        <div className={classes.contentBody}>\r\n                            <Typography\r\n                                className={classes.comfText}\r\n                                variant=\"h3\"\r\n                            >\r\n                                Your email has been verified! You may log in.\r\n\r\n                              </Typography>\r\n                            <Typography\r\n                                color=\"textSecondary\"\r\n                                variant=\"body1\"\r\n                            >\r\n\r\n                                <Link\r\n                                    component={RouterLink}\r\n                                    to=\"/sign-in\"\r\n                                    variant=\"h6\"\r\n                                >\r\n                                    Sign in\r\n                              </Link>\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nVerified.propTypes = {\r\n    history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(Verified);\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1050\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst UsersTable = props => {\r\n  const { className, users, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = event => {\r\n    const { users } = props;\r\n\r\n    let selectedUsers;\r\n\r\n    if (event.target.checked) {\r\n      selectedUsers = users.map(user => user.id);\r\n    } else {\r\n      selectedUsers = [];\r\n    }\r\n\r\n    setSelectedUsers(selectedUsers);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedUsers.indexOf(id);\r\n    let newSelectedUsers = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\r\n    } else if (selectedIndex === selectedUsers.length - 1) {\r\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedUsers = newSelectedUsers.concat(\r\n        selectedUsers.slice(0, selectedIndex),\r\n        selectedUsers.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedUsers(newSelectedUsers);\r\n  };\r\n\r\n  const handlePageChange = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const openPerms = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <Dialog \r\n              open={open}\r\n              onClose={handleClose}\r\n            >\r\n              <DialogTitle>Permissions</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText>\r\n                  Set Permissions for your medical provider.\r\n                </DialogContentText>\r\n                <Typography><Checkbox></Checkbox>Read</Typography>\r\n                <Typography><Checkbox></Checkbox>Read and Write</Typography>\r\n              </DialogContent>\r\n            </Dialog>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedUsers.length === users.length}\r\n                      color=\"primary\"\r\n                      indeterminate={\r\n                        selectedUsers.length > 0 &&\r\n                        selectedUsers.length < users.length\r\n                      }\r\n                      onChange={handleSelectAll}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Email</TableCell>\r\n                  <TableCell>Location</TableCell>\r\n                  <TableCell>Phone</TableCell>\r\n                  <TableCell>Permissions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {users.slice(0, rowsPerPage).map(user => (\r\n                  <TableRow\r\n                    className={classes.tableRow}\r\n                    hover\r\n                    key={user.id}\r\n                    selected={selectedUsers.indexOf(user.id) !== -1}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={selectedUsers.indexOf(user.id) !== -1}\r\n                        color=\"primary\"\r\n                        onChange={event => handleSelectOne(event, user.id)}\r\n                        value=\"true\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <div className={classes.nameContainer}>\r\n                        <Avatar\r\n                          className={classes.avatar}\r\n                          src={user.avatarUrl}\r\n                        >\r\n                          {getInitials(user.personalInfo.firstname + user.personalInfo.lastname)}\r\n                        </Avatar>\r\n                        <Typography variant=\"body1\">{user.personalInfo.firstname + \" \" + user.personalInfo.lastname}</Typography>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>{user.email}</TableCell>\r\n                    <TableCell>\r\n                      {user.personalInfo.address.street}, {user.personalInfo.address.city},{' '}\r\n                      {user.personalInfo.address.country}\r\n                    </TableCell>\r\n                    <TableCell>{user.personalInfo.phoneNum}</TableCell>\r\n                    <TableCell>\r\n                      <Button variant=\"outlined\" onClick={openPerms}>\r\n                        Permissions\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={users.length}\r\n          onChangePage={handlePageChange}\r\n          onChangeRowsPerPage={handleRowsPerPageChange}\r\n          page={page}\r\n          rowsPerPage={rowsPerPage}\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n        />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUsersTable.propTypes = {\r\n  className: PropTypes.string,\r\n  users: PropTypes.array.isRequired\r\n};\r\n\r\nexport default UsersTable;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Paper, Input } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    borderRadius: '4px',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1),\r\n    display: 'flex',\r\n    flexBasis: 420\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  input: {\r\n    flexGrow: 1,\r\n    fontSize: '14px',\r\n    lineHeight: '16px',\r\n    letterSpacing: '-0.05px'\r\n  }\r\n}));\r\n\r\nconst SearchInputPatients = props => {\r\n  const { className, onChange, style, ...rest } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const handleKeyDown = (event) => {\r\n    if(event.key === 'Enter') {\r\n      //console.log(event.target.value);\r\n      const name = event.target.value;\r\n      searchUsers(name);\r\n    }\r\n  \r\n  async function searchUsers(name) {\r\n    await axios.post(\"http://localhost:3000/users/searchmedpros\", {\r\n      firstname: name\r\n    }).then((response) => {\r\n        const data = response.data;\r\n        console.log(data[0]);\r\n        history.push({pathname:'/medpros', data:data});\r\n    }).catch((err) => {\r\n        console.log(err);\r\n    })\r\n}\r\n};\r\n\r\n  return (\r\n    <Paper\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      style={style}\r\n    >\r\n      <SearchIcon className={classes.icon} />\r\n      <Input\r\n        {...rest}\r\n        className={classes.input}\r\n        disableUnderline\r\n        onKeyUp={handleKeyDown}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nSearchInputPatients.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object,\r\n  history: PropTypes.object,\r\n};\r\n\r\nexport default SearchInputPatients;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport SearchInputPatients from 'components/SearchInputPatients';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  row: {\r\n    height: '42px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  spacer: {\r\n    flexGrow: 1\r\n  },\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  searchInput: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst UsersToolbar = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <div className={classes.row}>\r\n        <span className={classes.spacer} />\r\n        <Button className={classes.importButton}>Import</Button>\r\n        <Button className={classes.exportButton}>Export</Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Add user\r\n        </Button>\r\n      </div>\r\n      <div className={classes.row}>\r\n        <SearchInputPatients\r\n          className={classes.SearchInputPatients}\r\n          placeholder=\"Search user\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUsersToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UsersToolbar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport axios from \"axios\";\r\n\r\nimport { UsersToolbar, UsersTable } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst UserList = props => {\r\n  const classes = useStyles();\r\nconsole.log(props.location.data);\r\nconst [users, setUsers] = useState([]);\r\nif(props.location.data != undefined) {\r\n  useEffect(() => {\r\n    setUsers(props.location.data);\r\n    console.log(users);\r\n});\r\n}\r\nif(props.location.data == undefined) {\r\n  useEffect(() => {\r\n\r\n    async function fillUsers() {\r\n        await axios.post(\"http://localhost:3000/users/getmedpros\", {\r\n          firstname: \"*\"\r\n        }).then((response) => {\r\n            const data = response.data;\r\n            console.log(data);\r\n            data.forEach((userData) => {\r\n                setUsers(user => user.concat(userData))\r\n            })\r\n        }).catch((err) => {\r\n            console.log(err.response);\r\n            \r\n        })\r\n    }\r\n\r\n    fillUsers();\r\n}, []);\r\n}\r\n  return (\r\n    <div className={classes.root}>\r\n      <UsersToolbar />\r\n      <div className={classes.content}>\r\n        <UsersTable users={users} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React from 'react';\r\nimport { Switch, Redirect } from 'react-router-dom';\r\n\r\nimport { RouteWithLayout } from './components';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport { Main as MainLayout, Minimal as MinimalLayout } from './layouts';\r\n\r\nimport {\r\n  Dashboard as DashboardView,\r\n  ProductList as ProductListView,\r\n  UserList as UserListView,\r\n  Typography as TypographyView,\r\n  Icons as IconsView,\r\n  Account as AccountView,\r\n  Settings as SettingsView,\r\n  SignUp as SignUpView,\r\n  SignIn as SignInView,\r\n  NotFound as NotFoundView,\r\n  Entry as EntryView\r\n} from './views';\r\n\r\nimport EmailSent from './views/SignUp/EmailSent';\r\nimport SelectSignUp from './views/SignUp/SelectSignUp';\r\nimport SignUp from './views/SignUp/SignUp';\r\nimport SignUpMed from './views/SignUp/SignUpMed';\r\nimport Forgot from './views/SignIn/Forgot';\r\nimport Reset from './views/SignIn/Reset';\r\nimport Verified from './views/SignUp/Verified';\r\nimport UserList from './views/UserList/UserList';\r\nimport MedProList from './views/MedProList/UserList';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/\"\r\n        to=\"/sign-in\"\r\n      />\r\n      <PrivateRoute\r\n        component={DashboardView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/dashboard\"\r\n      />\r\n      <PrivateRoute\r\n        component={EntryView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/entry\"\r\n      />\r\n      <RouteWithLayout\r\n        component={UserListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/users\"\r\n      />\r\n      <PrivateRoute\r\n        component={AccountView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/account\"\r\n      />\r\n      <RouteWithLayout\r\n        component={SelectSignUp}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/sign-up\"\r\n      />\r\n      <RouteWithLayout\r\n        component={SignUp}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/sign-up-patient\"\r\n      />\r\n      <RouteWithLayout\r\n        component={SignUpMed}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/sign-up-med\"\r\n      />\r\n      <RouteWithLayout\r\n        component={SignInView}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/sign-in\"\r\n      />\r\n      <RouteWithLayout\r\n        component={Verified}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/register/:token\"\r\n      />\r\n      <RouteWithLayout\r\n        component={NotFoundView}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/not-found\"\r\n      />\r\n      <RouteWithLayout\r\n        component={EmailSent}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/email-sent\"\r\n      />\r\n      <RouteWithLayout\r\n        component={Forgot}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/forgot\"\r\n      />\r\n      <RouteWithLayout\r\n        component={Reset}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/reset/:token\"\r\n      />\r\n      <RouteWithLayout\r\n        component={UserList}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/patients\"\r\n      />\r\n      <RouteWithLayout\r\n        component={MedProList}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/medpros\"\r\n      />\r\n      <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { Component } from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Chart } from 'react-chartjs-2';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport validate from 'validate.js';\r\n\r\nimport { chartjs } from './helpers';\r\nimport theme from './theme';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport './assets/scss/index.scss';\r\nimport validators from './common/validators';\r\nimport Routes from './Routes';\r\n\r\nconst browserHistory = createBrowserHistory();\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw: chartjs.draw\r\n});\r\n\r\nvalidate.validators = {\r\n  ...validate.validators,\r\n  ...validators\r\n};\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Router history={browserHistory}>\r\n          <Routes />\r\n        </Router>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}